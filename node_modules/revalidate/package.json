{
  "_args": [
    [
      {
        "raw": "revalidate@^1.2.0",
        "scope": null,
        "escapedName": "revalidate",
        "name": "revalidate",
        "rawSpec": "^1.2.0",
        "spec": ">=1.2.0 <2.0.0",
        "type": "range"
      },
      "/Applications/XAMPP/xamppfiles/htdocs/revents"
    ]
  ],
  "_from": "revalidate@>=1.2.0 <2.0.0",
  "_id": "revalidate@1.2.0",
  "_inCache": true,
  "_location": "/revalidate",
  "_nodeVersion": "8.0.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/revalidate-1.2.0.tgz_1502474383337_0.3550900442060083"
  },
  "_npmUser": {
    "name": "elpapapollo",
    "email": "elpapapollo@gmail.com"
  },
  "_npmVersion": "5.0.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "revalidate@^1.2.0",
    "scope": null,
    "escapedName": "revalidate",
    "name": "revalidate",
    "rawSpec": "^1.2.0",
    "spec": ">=1.2.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/revalidate/-/revalidate-1.2.0.tgz",
  "_shasum": "dffdd52a92e0158de79a5a85ce01b65815f55c5d",
  "_shrinkwrap": null,
  "_spec": "revalidate@^1.2.0",
  "_where": "/Applications/XAMPP/xamppfiles/htdocs/revents",
  "author": {
    "name": "Jeremy Fairbank",
    "email": "elpapapollo@gmail.com",
    "url": "http://jeremyfairbank.com"
  },
  "bugs": {
    "url": "https://github.com/jfairbank/revalidate/issues"
  },
  "dependencies": {
    "lodash": "^4.15.0",
    "object-assign": "^4.1.0"
  },
  "description": "Elegant and composable validations",
  "devDependencies": {
    "babel-cli": "^6.9.0",
    "babel-core": "^6.9.0",
    "babel-eslint": "^7.0.0",
    "babel-jest": "^17.0.0",
    "babel-plugin-check-es2015-constants": "^6.8.0",
    "babel-plugin-transform-es2015-arrow-functions": "^6.8.0",
    "babel-plugin-transform-es2015-block-scoping": "^6.9.0",
    "babel-plugin-transform-es2015-computed-properties": "^6.8.0",
    "babel-plugin-transform-es2015-destructuring": "^6.9.0",
    "babel-plugin-transform-es2015-modules-commonjs": "^6.8.0",
    "babel-plugin-transform-es2015-parameters": "^6.9.0",
    "babel-plugin-transform-es2015-shorthand-properties": "^6.8.0",
    "babel-plugin-transform-es2015-spread": "^6.22.0",
    "babel-plugin-transform-es2015-template-literals": "^6.8.0",
    "babel-plugin-transform-export-extensions": "^6.8.0",
    "babel-plugin-transform-flow-strip-types": "^6.14.0",
    "babel-plugin-transform-object-rest-spread": "^6.20.1",
    "babel-plugin-transform-runtime": "^6.9.0",
    "babel-register": "^6.11.6",
    "babel-runtime": "^6.11.6",
    "eslint": "^3.9.1",
    "eslint-config-airbnb-base": "^11.0.0",
    "eslint-import-resolver-node": "^0.2.0",
    "eslint-plugin-flowtype": "^2.20.0",
    "eslint-plugin-import": "^2.1.0",
    "flow-bin": "^0.36.0",
    "gitbook-cli": "^2.3.0",
    "immutable": "^3.8.1",
    "jest": "^17.0.0",
    "rimraf": "^2.5.4"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-lzixPtHjSwjmn9gT3udLn/ItO7lrUfNABcLRfcUv0WX4LJ4s/WGJD1ahbJu5skczZtiV1yJQr2NslOSi8I+CiA==",
    "shasum": "dffdd52a92e0158de79a5a85ce01b65815f55c5d",
    "tarball": "https://registry.npmjs.org/revalidate/-/revalidate-1.2.0.tgz"
  },
  "files": [
    "src",
    "lib",
    "assertions.js",
    "immutable.js"
  ],
  "gitHead": "fb3917da39890492be20938228dbf99e27ae32e3",
  "homepage": "https://github.com/jfairbank/revalidate#readme",
  "jest": {
    "collectCoverage": true,
    "collectCoverageFrom": [
      "src/**/*.js"
    ],
    "coverageReporters": [
      "json",
      "lcov",
      "text-summary"
    ],
    "testRegex": "__tests__/.*\\.test\\.js$"
  },
  "keywords": [
    "functional",
    "validation",
    "validate",
    "form"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "elpapapollo",
      "email": "elpapapollo@gmail.com"
    }
  ],
  "name": "revalidate",
  "optionalDependencies": {},
  "readme": "# <img src=\"https://raw.githubusercontent.com/jfairbank/revalidate/master/logo/logo.png\" width=\"350\" alt=\"revalidate\">\n\n[![npm](https://img.shields.io/npm/v/revalidate.svg?style=flat-square)](https://www.npmjs.com/package/revalidate)\n[![Travis branch](https://img.shields.io/travis/jfairbank/revalidate/master.svg?style=flat-square)](https://travis-ci.org/jfairbank/revalidate)\n[![Codecov](https://img.shields.io/codecov/c/github/jfairbank/revalidate.svg?style=flat-square)](https://codecov.io/gh/jfairbank/revalidate)\n\n#### Elegant and composable validations.\n\nRevalidate is a library for creating and composing together small validation\nfunctions to create complex, robust validations. There is no need for awkward\nconfiguration rules to define validations. Just use functions.\n\nAll right. No more upselling. Just look at an example :heart:.\n\n```js\n// ES2015\nimport {\n  createValidator,\n  composeValidators,\n  combineValidators,\n  isRequired,\n  isAlphabetic,\n  isNumeric\n} from 'revalidate';\n\n// Or ES5\nvar r = require('revalidate');\nvar createValidator = r.createValidator;\nvar composeValidators = r.composeValidators;\nvar combineValidators = r.combineValidators;\nvar isRequired = r.isRequired;\nvar isAlphabetic = r.isAlphabetic;\nvar isNumeric = r.isNumeric;\n\n// Usage\nconst dogValidator = combineValidators({\n  name: composeValidators(\n    isRequired,\n    isAlphabetic\n  )('Name'),\n\n  age: isNumeric('Age')\n});\n\ndogValidator({}); // { name: 'Name is required' }\n\ndogValidator({ name: '123', age: 'abc' });\n// { name: 'Name must be alphabetic', age: 'Age must be numeric' }\n\ndogValidator({ name: 'Tucker', age: '10' }); // {}\n```\n\n## Install\n\nInstall with yarn or npm.\n\n```\nyarn add revalidate\n```\n\n```\nnpm install --save revalidate\n```\n\n## Getting Started\n\n#### [Docs](http://revalidate.jeremyfairbank.com)\n\nRevalidate has a host of options along with helper functions for building\nvalidations and some common validation functions right out of the box. To learn\nmore, check out the docs at [revalidate.jeremyfairbank.com](http://revalidate.jeremyfairbank.com).\n\n## Redux Form\n\nJust one more example! You might have heard about revalidate through Redux Form.\nRevalidate was originally conceived as a library for writing validation\nfunctions for Redux Form. Revalidate is still a great companion to Redux Form!\nHere is the simple synchronous form validation from Redux Form's\n[docs](http://redux-form.com/6.1.1/examples/syncValidation) rewritten to use\nrevalidate:\n\n```js\nimport React from 'react'\nimport { Field, reduxForm } from 'redux-form'\n\nimport {\n  createValidator,\n  composeValidators,\n  combineValidators,\n  isRequired,\n  hasLengthLessThan,\n  isNumeric\n} from 'revalidate'\n\nconst isValidEmail = createValidator(\n  message => value => {\n    if (value && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(value)) {\n      return message\n    }\n  },\n  'Invalid email address'\n)\n\nconst isGreaterThan = (n) => createValidator(\n  message => value => {\n    if (value && Number(value) <= n) {\n      return message\n    }\n  },\n  field => `${field} must be greater than ${n}`\n)\n\nconst customIsRequired = isRequired({ message: 'Required' })\n\nconst validate = combineValidators({\n  username: composeValidators(\n    customIsRequired,\n\n    hasLengthLessThan(16)({\n      message: 'Must be 15 characters or less'\n    })\n  )(),\n\n  email: composeValidators(\n    customIsRequired,\n    isValidEmail\n  )(),\n\n  age: composeValidators(\n    customIsRequired,\n\n    isNumeric({\n      message: 'Must be a number'\n    }),\n\n    isGreaterThan(17)({\n      message: 'Sorry, you must be at least 18 years old'\n    })\n  )()\n})\n\nconst warn = values => {\n  const warnings = {}\n  if (values.age < 19) {\n    warnings.age = 'Hmm, you seem a bit young...'\n  }\n  return warnings\n}\n\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\n  <div>\n    <label>{label}</label>\n    <div>\n      <input {...input} placeholder={label} type={type}/>\n      {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\n    </div>\n  </div>\n)\n\nconst SyncValidationForm = (props) => {\n  const { handleSubmit, pristine, reset, submitting } = props\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field name=\"username\" type=\"text\" component={renderField} label=\"Username\"/>\n      <Field name=\"email\" type=\"email\" component={renderField} label=\"Email\"/>\n      <Field name=\"age\" type=\"number\" component={renderField} label=\"Age\"/>\n      <div>\n        <button type=\"submit\" disabled={submitting}>Submit</button>\n        <button type=\"button\" disabled={pristine || submitting} onClick={reset}>\n          Clear Values\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default reduxForm({\n  form: 'syncValidation',  // a unique identifier for this form\n  validate,                // <--- validation function given to redux-form\n  warn                     // <--- warning function given to redux-form\n})(SyncValidationForm)\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/jfairbank/revalidate.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib",
    "check": "npm run lint && npm run typecheck && npm test",
    "clean": "rimraf lib",
    "docs:build": "npm run docs:prepare && gitbook build",
    "docs:clean": "rimraf _book",
    "docs:prepare": "gitbook install",
    "docs:publish": "npm run docs:clean && npm run docs:build && cp CNAME _book && cd _book && git init && git commit --allow-empty -m 'update book' && git checkout -b gh-pages && touch .nojekyll && git add . && git commit -am 'update book' && git push git@github.com:jfairbank/revalidate gh-pages --force",
    "docs:watch": "npm run docs:prepare && gitbook serve",
    "lint": "eslint src __tests__",
    "prepublish": "npm run clean && npm run build",
    "test": "jest",
    "typecheck": "flow",
    "watch:test": "jest --watch"
  },
  "version": "1.2.0"
}
