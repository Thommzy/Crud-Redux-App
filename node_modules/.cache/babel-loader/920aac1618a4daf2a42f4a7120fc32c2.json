{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/revents/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/revents/src/Features/Event/EventForm/EventForm.jsx\";\nimport React, { Component } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\n\nclass EventForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      title: \"\",\n      date: \"\",\n      city: \"\",\n      venue: \"\",\n      hostedBy: \"\"\n    };\n\n    this.handleSubmitForm = evt => {\n      evt.preventDefault();\n      this.props.createEvent(this.state);\n    };\n\n    this.handleInputChange = ({\n      target: {\n        name,\n        value\n      }\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.selectedEvent != null) {\n      this.setState(_objectSpread({}, this.props.sel));\n    }\n  }\n\n  render() {\n    const cancelFormOpen = this.props.cancelFormOpen;\n    const _this$state = this.state,\n          title = _this$state.title,\n          date = _this$state.date,\n          city = _this$state.city,\n          venue = _this$state.venue,\n          hostedBy = _this$state.hostedBy;\n    return React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(Form, {\n      onSubmit: this.handleSubmitForm,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, \"Event Title\"), React.createElement(\"input\", {\n      name: \"title\",\n      onChange: this.handleInputChange,\n      value: title,\n      placeholder: \"Event Title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, \"Event Date\"), React.createElement(\"input\", {\n      name: \"date\",\n      onChange: this.handleInputChange,\n      value: date,\n      type: \"date\",\n      placeholder: \"Event Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, \"City\"), React.createElement(\"input\", {\n      name: \"city\",\n      onChange: this.handleInputChange,\n      value: city,\n      placeholder: \"City event is taking place\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Venue\"), React.createElement(\"input\", {\n      name: \"venue\",\n      onChange: this.handleInputChange,\n      value: venue,\n      placeholder: \"Enter the Venue of the event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Hosted By\"), React.createElement(\"input\", {\n      name: \"hostedBy\",\n      onChange: this.handleInputChange,\n      value: hostedBy,\n      placeholder: \"Enter the name of person hosting\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Button, {\n      positive: true,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      onClick: cancelFormOpen,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"Cancel\")));\n  }\n\n}\n\nexport default EventForm;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/revents/src/Features/Event/EventForm/EventForm.jsx"],"names":["React","Component","Segment","Form","Button","EventForm","state","title","date","city","venue","hostedBy","handleSubmitForm","evt","preventDefault","props","createEvent","handleInputChange","target","name","value","setState","componentDidMount","selectedEvent","sel","render","cancelFormOpen"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,EAAkBC,IAAlB,EAAwBC,MAAxB,QAAsC,mBAAtC;;AAEA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCK,KADgC,GACxB;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,IAAI,EAAE,EAHA;AAINC,MAAAA,KAAK,EAAE,EAJD;AAKNC,MAAAA,QAAQ,EAAE;AALJ,KADwB;;AAAA,SAkBhCC,gBAlBgC,GAkBbC,GAAG,IAAI;AACxBA,MAAAA,GAAG,CAACC,cAAJ;AACA,WAAKC,KAAL,CAAWC,WAAX,CAAuB,KAAKV,KAA5B;AACD,KArB+B;;AAAA,SAuBhCW,iBAvBgC,GAuBZ,CAAC;AAAEC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR;AAAV,KAAD,KAAiC;AACnD,WAAKC,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC;AADI,OAAd;AAGD,KA3B+B;AAAA;;AAUhCE,EAAAA,iBAAiB,GAAE;AACjB,QAAG,KAAKP,KAAL,CAAWQ,aAAX,IAA6B,IAAhC,EAAsC;AACpC,WAAKF,QAAL,mBACK,KAAKN,KAAL,CAAWS,GADhB;AAGD;AACD;;AAYFC,EAAAA,MAAM,GAAG;AAAA,UACCC,cADD,GACoB,KAAKX,KADzB,CACCW,cADD;AAAA,wBAEwC,KAAKpB,KAF7C;AAAA,UAECC,KAFD,eAECA,KAFD;AAAA,UAEQC,IAFR,eAEQA,IAFR;AAAA,UAEcC,IAFd,eAEcA,IAFd;AAAA,UAEoBC,KAFpB,eAEoBA,KAFpB;AAAA,UAE2BC,QAF3B,eAE2BA,QAF3B;AAGP,WACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKC,gBAArB;AAAuC,MAAA,YAAY,EAAC,KAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,QAAQ,EAAE,KAAKK,iBAFjB;AAGE,MAAA,KAAK,EAAEV,KAHT;AAIE,MAAA,WAAW,EAAC,aAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,EAUE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKU,iBAFjB;AAGE,MAAA,KAAK,EAAET,IAHT;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,WAAW,EAAC,YALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAVF,EAoBE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAE,KAAKS,iBAFjB;AAGE,MAAA,KAAK,EAAER,IAHT;AAIE,MAAA,WAAW,EAAC,4BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CApBF,EA6BE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,QAAQ,EAAE,KAAKQ,iBAFjB;AAGE,MAAA,KAAK,EAAEP,KAHT;AAIE,MAAA,WAAW,EAAC,8BAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CA7BF,EAsCE,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AACE,MAAA,IAAI,EAAC,UADP;AAEE,MAAA,QAAQ,EAAE,KAAKO,iBAFjB;AAGE,MAAA,KAAK,EAAEN,QAHT;AAIE,MAAA,WAAW,EAAC,kCAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAtCF,EA+CE,oBAAC,MAAD;AAAQ,MAAA,QAAQ,MAAhB;AAAiB,MAAA,IAAI,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CF,EAkDE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEe,cAAjB;AAAiC,MAAA,IAAI,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlDF,CADF,CADF;AA0DD;;AAzF+B;;AA4FlC,eAAerB,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Segment, Form, Button } from \"semantic-ui-react\";\n\nclass EventForm extends Component {\n  state = {\n    title: \"\",\n    date: \"\",\n    city: \"\",\n    venue: \"\",\n    hostedBy: \"\"\n  };\n\n\n  componentDidMount(){\n    if(this.props.selectedEvent !=  null) {\n      this.setState({\n        ...this.props.sel\n      })\n    }\n   }\n\n  handleSubmitForm = evt => {\n    evt.preventDefault();\n    this.props.createEvent(this.state);\n  };\n \n  handleInputChange = ({ target: { name, value } }) => {\n    this.setState({\n      [name]: value\n    });\n  };\n  render() {\n    const { cancelFormOpen } = this.props;\n    const { title, date, city, venue, hostedBy } = this.state;\n    return (\n      <Segment>\n        <Form onSubmit={this.handleSubmitForm} autoComplete='off'>\n          <Form.Field>\n            <label>Event Title</label>\n            <input\n              name='title'\n              onChange={this.handleInputChange}\n              value={title}\n              placeholder='Event Title'\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Event Date</label>\n            <input\n              name='date'\n              onChange={this.handleInputChange}\n              value={date}\n              type='date'\n              placeholder='Event Date'\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>City</label>\n            <input\n              name='city'\n              onChange={this.handleInputChange}\n              value={city}\n              placeholder='City event is taking place'\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Venue</label>\n            <input\n              name='venue'\n              onChange={this.handleInputChange}\n              value={venue}\n              placeholder='Enter the Venue of the event'\n            />\n          </Form.Field>\n          <Form.Field>\n            <label>Hosted By</label>\n            <input\n              name='hostedBy'\n              onChange={this.handleInputChange}\n              value={hostedBy}\n              placeholder='Enter the name of person hosting'\n            />\n          </Form.Field>\n          <Button positive type='submit'>\n            Submit\n          </Button>\n          <Button onClick={cancelFormOpen} type='button'>\n            Cancel\n          </Button>\n        </Form>\n      </Segment>\n    );\n  }\n}\n\nexport default EventForm;\n"]},"metadata":{},"sourceType":"module"}