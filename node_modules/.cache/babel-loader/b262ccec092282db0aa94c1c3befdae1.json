{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventForm/EventForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { Segment, Form, Button, Grid, Header } from \"semantic-ui-react\";\nimport { createEvent, updateEvent } from \"../eventActions\";\nimport cuid from \"cuid\";\nimport TextInput from \"../../../app/common/form/TextInput\";\nimport TestArea from \"../../../app/common/form/TestArea\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\n\nconst mapState = (state, ownProps) => {\n  const eventId = ownProps.match.params.id;\n  let event = {\n    title: \"\",\n    date: \"\",\n    city: \"\",\n    venue: \"\",\n    hostedBy: \"\"\n  };\n\n  if (eventId && state.events.length > 0) {\n    event = state.events.filter(event => event.id === eventId)[0];\n  }\n\n  return {\n    event\n  };\n};\n\nconst actions = {\n  createEvent,\n  updateEvent\n};\nconst category = [{\n  key: \"drinks\",\n  text: \"Drinks\",\n  value: \"drinks\"\n}, {\n  key: \"culture\",\n  text: \"Culture\",\n  value: \"culture\"\n}, {\n  key: \"film\",\n  text: \"Film\",\n  value: \"film\"\n}, {\n  key: \"food\",\n  text: \"Food\",\n  value: \"food\"\n}, {\n  key: \"music\",\n  text: \"Music\",\n  value: \"music\"\n}, {\n  key: \"travel\",\n  text: \"Travel\",\n  value: \"travel\"\n}];\n\nclass EventForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleSubmitForm = evt => {\n      evt.preventDefault();\n\n      if (this.state.id) {\n        this.props.updateEvent(this.state);\n        this.props.history.push(\"/events/\".concat(this.state.id));\n      } else {\n        const newEvent = _objectSpread({}, this.state, {\n          id: cuid(),\n          hostPhotoURL: \"./assets/user.png\"\n        });\n\n        this.props.createEvent(newEvent);\n        this.props.history.push(\"/events\");\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, React.createElement(Header, {\n      sub: true,\n      color: \"teal\",\n      content: \"Event Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.handleSubmitForm,\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: TextInput,\n      placeholder: \"Give Your Event a Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"category\",\n      component: SelectInput,\n      options: category,\n      placeholder: \"What is Your Event About\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: TestArea,\n      rows: 3,\n      placeholder: \"Tell us about your event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Header, {\n      sub: true,\n      color: \"teal\",\n      content: \"Event Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"city\",\n      component: TextInput,\n      placeholder: \"Event City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"venue\",\n      component: TextInput,\n      placeholder: \"Event Venue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"date\",\n      component: TextInput,\n      placeholder: \"Event Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Button, {\n      positive: true,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      onClick: this.props.history.goBack,\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default connect(mapState, actions)(reduxForm({\n  form: \"eventForm\"\n})(EventForm));","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventForm/EventForm.jsx"],"names":["React","Component","connect","reduxForm","Field","Segment","Form","Button","Grid","Header","createEvent","updateEvent","cuid","TextInput","TestArea","SelectInput","mapState","state","ownProps","eventId","match","params","id","event","title","date","city","venue","hostedBy","events","length","filter","actions","category","key","text","value","EventForm","handleSubmitForm","evt","preventDefault","props","history","push","newEvent","hostPhotoURL","render","goBack","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { Segment, Form, Button, Grid, Header } from \"semantic-ui-react\";\nimport { createEvent, updateEvent } from \"../eventActions\";\nimport cuid from \"cuid\";\nimport TextInput from \"../../../app/common/form/TextInput\";\nimport TestArea from \"../../../app/common/form/TestArea\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\n\nconst mapState = (state, ownProps) => {\n  const eventId = ownProps.match.params.id;\n\n  let event = {\n    title: \"\",\n    date: \"\",\n    city: \"\",\n    venue: \"\",\n    hostedBy: \"\"\n  };\n\n  if (eventId && state.events.length > 0) {\n    event = state.events.filter(event => event.id === eventId)[0];\n  }\n  return {\n    event\n  };\n};\n\nconst actions = {\n  createEvent,\n  updateEvent\n};\n\nconst category = [\n  { key: \"drinks\", text: \"Drinks\", value: \"drinks\" },\n  { key: \"culture\", text: \"Culture\", value: \"culture\" },\n  { key: \"film\", text: \"Film\", value: \"film\" },\n  { key: \"food\", text: \"Food\", value: \"food\" },\n  { key: \"music\", text: \"Music\", value: \"music\" },\n  { key: \"travel\", text: \"Travel\", value: \"travel\" }\n];\nclass EventForm extends Component {\n  handleSubmitForm = evt => {\n    evt.preventDefault();\n    if (this.state.id) {\n      this.props.updateEvent(this.state);\n      this.props.history.push(`/events/${this.state.id}`);\n    } else {\n      const newEvent = {\n        ...this.state,\n        id: cuid(),\n        hostPhotoURL: \"./assets/user.png\"\n      };\n      this.props.createEvent(newEvent);\n      this.props.history.push(`/events`);\n    }\n  };\n\n  render() {\n    return (\n      <Grid>\n        <Grid.Column width={10}>\n          <Segment>\n            <Header sub color='teal' content='Event Details' />\n            <Form onSubmit={this.handleSubmitForm} autoComplete='off'>\n              <Field\n                name='title'\n                component={TextInput}\n                placeholder='Give Your Event a Name'\n              />\n              <Field\n                name='category'\n                component={SelectInput}\n                options={category}\n                placeholder='What is Your Event About'\n              />\n              <Field\n                name='description'\n                component={TestArea}\n                rows={3}\n                placeholder='Tell us about your event'\n              />\n              <Header sub color='teal' content='Event Details' />\n              <Field\n                name='city'\n                component={TextInput}\n                placeholder='Event City'\n              />\n              <Field\n                name='venue'\n                component={TextInput}\n                placeholder='Event Venue'\n              />\n              <Field\n                name='date'\n                component={TextInput}\n                placeholder='Event Date'\n              />\n              <Button positive type='submit'>\n                Submit\n              </Button>\n              <Button onClick={this.props.history.goBack} type='button'>\n                Cancel\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  actions\n)(reduxForm({ form: \"eventForm\" })(EventForm));\n"]},"metadata":{},"sourceType":"module"}