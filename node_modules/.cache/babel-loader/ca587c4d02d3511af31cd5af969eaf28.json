{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventDetailed/EventDetailedPage.jsx\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"semantic-ui-react\";\nimport EventDetailedHeader from \"./EventDetailedHeader\";\nimport EventDetailedInfo from \"./EventDetailedInfo\";\nimport EventDetailedChat from \"./EventDetailedChat\";\nimport EventDetailedSidebar from \"./EventDetailedSidebar\";\n\nconst mapStateToProps = (state, ownProps) => {\n  const eventId = ownProps.match.params.id;\n  let event = {};\n\n  if (eventId && state.events.length > 0) {\n    event = state.events.filter(event => event.id === eventId)[0];\n  }\n\n  return {\n    event\n  };\n};\n\nconst EventDetailedPage = ({\n  event\n}) => {\n  return React.createElement(Grid, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 10,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(EventDetailedHeader, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), React.createElement(EventDetailedInfo, {\n    event: event,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(EventDetailedChat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  })), React.createElement(Grid.Column, {\n    width: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(EventDetailedSidebar, {\n    attendees: event.attendees,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  })));\n};\n\nexport default connect(mapStateToProps)(EventDetailedPage);","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventDetailed/EventDetailedPage.jsx"],"names":["React","connect","Grid","EventDetailedHeader","EventDetailedInfo","EventDetailedChat","EventDetailedSidebar","mapStateToProps","state","ownProps","eventId","match","params","id","event","events","length","filter","EventDetailedPage","attendees"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;;AAEA,MAAMC,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC3C,QAAMC,OAAO,GAAGD,QAAQ,CAACE,KAAT,CAAeC,MAAf,CAAsBC,EAAtC;AAEA,MAAIC,KAAK,GAAG,EAAZ;;AAEA,MAAIJ,OAAO,IAAIF,KAAK,CAACO,MAAN,CAAaC,MAAb,GAAsB,CAArC,EAAwC;AACtCF,IAAAA,KAAK,GAAGN,KAAK,CAACO,MAAN,CAAaE,MAAb,CAAqBH,KAAK,IAAIA,KAAK,CAACD,EAAN,KAAaH,OAA3C,EAAqD,CAArD,CAAR;AACD;;AAED,SAAO;AACLI,IAAAA;AADK,GAAP;AAGD,CAZD;;AAcA,MAAMI,iBAAiB,GAAG,CAAC;AAAEJ,EAAAA;AAAF,CAAD,KAAe;AACvC,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,iBAAD;AAAmB,IAAA,KAAK,EAAEA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAME,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,oBAAD;AAAsB,IAAA,SAAS,EAAEA,KAAK,CAACK,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANF,CADF;AAYD,CAbD;;AAeA,eAAelB,OAAO,CAACM,eAAD,CAAP,CAAyBW,iBAAzB,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Grid } from \"semantic-ui-react\";\nimport EventDetailedHeader from \"./EventDetailedHeader\";\nimport EventDetailedInfo from \"./EventDetailedInfo\";\nimport EventDetailedChat from \"./EventDetailedChat\";\nimport EventDetailedSidebar from \"./EventDetailedSidebar\";\n\nconst mapStateToProps = (state, ownProps) => {\n  const eventId = ownProps.match.params.id;\n\n  let event = {};\n\n  if (eventId && state.events.length > 0) {\n    event = state.events.filter((event => event.id === eventId))[0];\n  }\n\n  return {\n    event\n  };\n};\n\nconst EventDetailedPage = ({ event }) => {\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <EventDetailedHeader event={event} />\n        <EventDetailedInfo event={event} />\n        <EventDetailedChat />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <EventDetailedSidebar attendees={event.attendees} />\n      </Grid.Column>\n    </Grid>\n  );\n};\n\nexport default connect(mapStateToProps)(EventDetailedPage);\n"]},"metadata":{},"sourceType":"module"}