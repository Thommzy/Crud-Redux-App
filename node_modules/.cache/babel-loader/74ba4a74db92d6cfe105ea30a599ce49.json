{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventDashboard/EventDashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport EventList from \"../EventList/EventList\";\nimport cuid from \"cuid\";\nimport { createEvent, deleteEvent, updateEvent } from \"../eventActions\";\n\nconst mapState = state => ({\n  events: state.events\n});\n\nconst actions = {\n  createEvent,\n  deleteEvent,\n  updateEvent\n};\n\nclass EventDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleDeleteEvent = id => {\n      this.props.deleteEvent(id);\n    };\n  }\n\n  render() {\n    // const { isOpen, selectedEvent } = this.state;\n    const events = this.props.events;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(EventList, {\n      deleteEvent: this.handleDeleteEvent,\n      events: events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"Activity Feed\")));\n  }\n\n}\n\nexport default connect(mapState, actions)(EventDashboard);","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventDashboard/EventDashboard.jsx"],"names":["React","Component","Grid","connect","EventList","cuid","createEvent","deleteEvent","updateEvent","mapState","state","events","actions","EventDashboard","handleDeleteEvent","id","props","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,EAAmCC,WAAnC,QAAsD,iBAAtD;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,KAAK;AACzBC,EAAAA,MAAM,EAAED,KAAK,CAACC;AADW,CAAL,CAAtB;;AAIA,MAAMC,OAAO,GAAG;AACdN,EAAAA,WADc;AAEdC,EAAAA,WAFc;AAGdC,EAAAA;AAHc,CAAhB;;AAMA,MAAMK,cAAN,SAA6BZ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SA4CrCa,iBA5CqC,GA4CjBC,EAAE,IAAI;AACxB,WAAKC,KAAL,CAAWT,WAAX,CAAuBQ,EAAvB;AACD,KA9CoC;AAAA;;AAgDrCE,EAAAA,MAAM,GAAG;AACP;AADO,UAECN,MAFD,GAEY,KAAKK,KAFjB,CAECL,MAFD;AAGP,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,EAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AAAW,MAAA,WAAW,EAAE,KAAKG,iBAA7B;AAAgD,MAAA,MAAM,EAAEH,MAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,EAIE,oBAAC,IAAD,CAAM,MAAN;AAAa,MAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,CAJF,CADF;AAUD;;AA7DoC;;AAgEvC,eAAeR,OAAO,CACpBM,QADoB,EAEpBG,OAFoB,CAAP,CAGbC,cAHa,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid } from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\nimport EventList from \"../EventList/EventList\";\nimport cuid from \"cuid\";\nimport { createEvent, deleteEvent, updateEvent } from \"../eventActions\";\n\nconst mapState = state => ({\n  events: state.events\n});\n\nconst actions = {\n  createEvent,\n  deleteEvent,\n  updateEvent\n};\n\nclass EventDashboard extends Component {\n  // state = {\n  //   isOpen: false,\n  //   selectedEvent: null\n  // };\n\n  // handleIsOpenToggle = () => {\n  //   this.setState(({ isOpen }) => ({\n  //     isOpen: !isOpen\n  //   }));\n  // };\n\n  // handleCreateFormOpen = () => {\n  //   this.setState({\n  //     isOpen: true,\n  //     selectedEvent: null\n  //   });\n  // };\n\n  // handleFormCancel = () => {\n  //   this.setState({\n  //     isOpen: false\n  //   });\n  // };\n\n  // handleCreateEvent = newEvent => {\n  //   newEvent.id = cuid();\n  //   newEvent.hostPhotoURL = \"./assets/user.png\";\n  //   this.props.createEvent(newEvent);\n  // };\n\n  // // handleSelectEvent = (evt, event) => {\n  // //   console.log(evt);\n  // //   console.log(event);\n  // //   this.setState({\n  // //     selectedEvent: event,\n  // //     isOpen: true\n  // //   });\n  // // };\n\n  // handleUpdateEvent = updatedEvent => {\n  //   this.props.updateEvent(updatedEvent);\n  // };\n\n  handleDeleteEvent = id => {\n    this.props.deleteEvent(id);\n  };\n\n  render() {\n    // const { isOpen, selectedEvent } = this.state;\n    const { events } = this.props;\n    return (\n      <Grid>\n        <Grid.Column width={10}>\n          <EventList deleteEvent={this.handleDeleteEvent} events={events} />\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <h2>Activity Feed</h2>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  actions\n)(EventDashboard);\n"]},"metadata":{},"sourceType":"module"}