{"ast":null,"code":"import { createReducer } from \"../../app/common/util/reducerUtils\";\nimport { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT } from \"./eventsConstants\"; // First Thing we do is Create an Initial State\n\nconst initialState = [{\n  id: \"1\",\n  title: \"Trip to Tower of London\",\n  date: \"2018-03-27\",\n  category: \"culture\",\n  description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n  city: \"London, UK\",\n  venue: \"Tower of London, St Katharine's & Wapping, London\",\n  hostedBy: \"Bob\",\n  hostPhotoURL: \"https://randomuser.me/api/portraits/men/20.jpg\",\n  attendees: [{\n    id: \"a\",\n    name: \"Bob\",\n    photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n  }, {\n    id: \"b\",\n    name: \"Tom\",\n    photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n  }]\n}, {\n  id: \"2\",\n  title: \"Trip to Punch and Judy Pub\",\n  date: \"2018-03-28\",\n  category: \"drinks\",\n  description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n  city: \"London, UK\",\n  venue: \"Punch & Judy, Henrietta Street, London, UK\",\n  hostedBy: \"Tom\",\n  hostPhotoURL: \"https://randomuser.me/api/portraits/men/22.jpg\",\n  attendees: [{\n    id: \"b\",\n    name: \"Tom\",\n    photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n  }, {\n    id: \"a\",\n    name: \"Bob\",\n    photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n  }]\n}]; //Then we create our Reducer Functions\n\nconst createEvent = (state, payload) => {\n  return [...state, payload.event];\n}; // Here we did Pass the state and payload\n// Second Function is To update the event\n\n\nconst updateEvent = (state, payload) => {\n  return [...state.filter(event => event.id !== payload.event.id), payload.event];\n};\n\nconst deleteEvent = (state, payload) => {\n  return [...state.filter(event => event.id !== payload.eventId)];\n}; // Then we export default createReducers ... then we pass our initial State from the const above..\n// then we need to create the function Map\n\n\nexport default createReducer(initialState, {\n  [CREATE_EVENT]: createEvent,\n  [UPDATE_EVENT]: updateEvent,\n  [DELETE_EVENT]: deleteEvent\n}); //Dont Forget to add this to the rootReducers","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/eventReducers.js"],"names":["createReducer","CREATE_EVENT","UPDATE_EVENT","DELETE_EVENT","initialState","id","title","date","category","description","city","venue","hostedBy","hostPhotoURL","attendees","name","photoURL","createEvent","state","payload","event","updateEvent","filter","deleteEvent","eventId"],"mappings":"AAAA,SAASA,aAAT,QAA8B,oCAA9B;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,QAAyD,mBAAzD,C,CAEA;;AAEA,MAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,KAAK,EAAE,yBAFT;AAGEC,EAAAA,IAAI,EAAE,YAHR;AAIEC,EAAAA,QAAQ,EAAE,SAJZ;AAKEC,EAAAA,WAAW,EACT,wLANJ;AAOEC,EAAAA,IAAI,EAAE,YAPR;AAQEC,EAAAA,KAAK,EAAE,mDART;AASEC,EAAAA,QAAQ,EAAE,KATZ;AAUEC,EAAAA,YAAY,EAAE,gDAVhB;AAWEC,EAAAA,SAAS,EAAE,CACT;AACET,IAAAA,EAAE,EAAE,GADN;AAEEU,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADS,EAMT;AACEX,IAAAA,EAAE,EAAE,GADN;AAEEU,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GANS;AAXb,CADmB,EAyBnB;AACEX,EAAAA,EAAE,EAAE,GADN;AAEEC,EAAAA,KAAK,EAAE,4BAFT;AAGEC,EAAAA,IAAI,EAAE,YAHR;AAIEC,EAAAA,QAAQ,EAAE,QAJZ;AAKEC,EAAAA,WAAW,EACT,wLANJ;AAOEC,EAAAA,IAAI,EAAE,YAPR;AAQEC,EAAAA,KAAK,EAAE,4CART;AASEC,EAAAA,QAAQ,EAAE,KATZ;AAUEC,EAAAA,YAAY,EAAE,gDAVhB;AAWEC,EAAAA,SAAS,EAAE,CACT;AACET,IAAAA,EAAE,EAAE,GADN;AAEEU,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GADS,EAMT;AACEX,IAAAA,EAAE,EAAE,GADN;AAEEU,IAAAA,IAAI,EAAE,KAFR;AAGEC,IAAAA,QAAQ,EAAE;AAHZ,GANS;AAXb,CAzBmB,CAArB,C,CAmDA;;AAEA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AACtC,SAAO,CAAC,GAAGD,KAAJ,EAAWC,OAAO,CAACC,KAAnB,CAAP;AACD,CAFD,C,CAEG;AAEH;;;AAEA,MAAMC,WAAW,GAAG,CAACH,KAAD,EAAQC,OAAR,KAAoB;AACtC,SAAO,CACL,GAAGD,KAAK,CAACI,MAAN,CAAaF,KAAK,IAAIA,KAAK,CAACf,EAAN,KAAac,OAAO,CAACC,KAAR,CAAcf,EAAjD,CADE,EAELc,OAAO,CAACC,KAFH,CAAP;AAID,CALD;;AAOA,MAAMG,WAAW,GAAG,CAACL,KAAD,EAAQC,OAAR,KAAoB;AACtC,SAAO,CAAC,GAAGD,KAAK,CAACI,MAAN,CAAaF,KAAK,IAAIA,KAAK,CAACf,EAAN,KAAac,OAAO,CAACK,OAA3C,CAAJ,CAAP;AACD,CAFD,C,CAIA;AACA;;;AACA,eAAexB,aAAa,CAACI,YAAD,EAAe;AACzC,GAACH,YAAD,GAAgBgB,WADyB;AAEzC,GAACf,YAAD,GAAgBmB,WAFyB;AAGzC,GAAClB,YAAD,GAAgBoB;AAHyB,CAAf,CAA5B,C,CAMA","sourcesContent":["import { createReducer } from \"../../app/common/util/reducerUtils\";\nimport { CREATE_EVENT, UPDATE_EVENT, DELETE_EVENT } from \"./eventsConstants\";\n\n// First Thing we do is Create an Initial State\n\nconst initialState = [\n  {\n    id: \"1\",\n    title: \"Trip to Tower of London\",\n    date: \"2018-03-27\",\n    category: \"culture\",\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n    city: \"London, UK\",\n    venue: \"Tower of London, St Katharine's & Wapping, London\",\n    hostedBy: \"Bob\",\n    hostPhotoURL: \"https://randomuser.me/api/portraits/men/20.jpg\",\n    attendees: [\n      {\n        id: \"a\",\n        name: \"Bob\",\n        photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n      },\n      {\n        id: \"b\",\n        name: \"Tom\",\n        photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n      }\n    ]\n  },\n  {\n    id: \"2\",\n    title: \"Trip to Punch and Judy Pub\",\n    date: \"2018-03-28\",\n    category: \"drinks\",\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n    city: \"London, UK\",\n    venue: \"Punch & Judy, Henrietta Street, London, UK\",\n    hostedBy: \"Tom\",\n    hostPhotoURL: \"https://randomuser.me/api/portraits/men/22.jpg\",\n    attendees: [\n      {\n        id: \"b\",\n        name: \"Tom\",\n        photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n      },\n      {\n        id: \"a\",\n        name: \"Bob\",\n        photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n      }\n    ]\n  }\n];\n\n//Then we create our Reducer Functions\n\nconst createEvent = (state, payload) => {\n  return [...state, payload.event];\n}; // Here we did Pass the state and payload\n\n// Second Function is To update the event\n\nconst updateEvent = (state, payload) => {\n  return [\n    ...state.filter(event => event.id !== payload.event.id),\n    payload.event\n  ];\n};\n\nconst deleteEvent = (state, payload) => {\n  return [...state.filter(event => event.id !== payload.eventId)];\n};\n\n// Then we export default createReducers ... then we pass our initial State from the const above..\n// then we need to create the function Map\nexport default createReducer(initialState, {\n  [CREATE_EVENT]: createEvent,\n  [UPDATE_EVENT]: updateEvent,\n  [DELETE_EVENT]: deleteEvent\n});\n\n//Dont Forget to add this to the rootReducers\n"]},"metadata":{},"sourceType":"module"}