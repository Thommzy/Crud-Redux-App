{"ast":null,"code":"import _objectSpread from \"/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventForm/EventForm.jsx\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport { composeValidators, combineValidators, isRequired, hasLengthGreaterThan } from \"revalidate\";\nimport { Segment, Form, Button, Grid, Header } from \"semantic-ui-react\";\nimport { createEvent, updateEvent } from \"../eventActions\";\nimport cuid from \"cuid\";\nimport TextInput from \"../../../app/common/form/TextInput\";\nimport TestArea from \"../../../app/common/form/TestArea\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\n\nconst mapState = (state, ownProps) => {\n  const eventId = ownProps.match.params.id;\n  let event = {};\n\n  if (eventId && state.events.length > 0) {\n    event = state.events.filter(event => event.id === eventId)[0];\n  }\n\n  return {\n    initialValues: event\n  };\n};\n\nconst actions = {\n  createEvent,\n  updateEvent\n}; //CombineValidators connect it staraight to the redux form\n\nconst validate = combineValidators({\n  title: isRequired({\n    message: \"The Event Title is Required\"\n  }),\n  category: isRequired({\n    message: \"Category is Required\"\n  }),\n  description: composeValidators(isRequired({\n    message: \"Please Enter a Description\"\n  }), hasLengthGreaterThan(4)({\n    message: \"Description need to be at Least Five Characters\"\n  }))(),\n  city: isRequired(\"city\"),\n  venue: isRequired(\"venue\")\n});\nconst category = [{\n  key: \"drinks\",\n  text: \"Drinks\",\n  value: \"drinks\"\n}, {\n  key: \"culture\",\n  text: \"Culture\",\n  value: \"culture\"\n}, {\n  key: \"film\",\n  text: \"Film\",\n  value: \"film\"\n}, {\n  key: \"food\",\n  text: \"Food\",\n  value: \"food\"\n}, {\n  key: \"music\",\n  text: \"Music\",\n  value: \"music\"\n}, {\n  key: \"travel\",\n  text: \"Travel\",\n  value: \"travel\"\n}];\n\nclass EventForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onFormSubmit = values => {\n      if (this.props.initialValues.id) {\n        this.props.updateEvent(values);\n        this.props.history.push(\"/events/\".concat(this.props.initialValues.id));\n      } else {\n        const newEvent = _objectSpread({}, values, {\n          id: cuid(),\n          hostPhotoURL: \"./assets/user.png\",\n          hostedBy: \"Bob \"\n        });\n\n        this.props.createEvent(newEvent);\n        this.props.history.push(\"/events/\".concat(newEvent.id));\n      }\n    };\n  }\n\n  render() {\n    const _this$props = this.props,\n          history = _this$props.history,\n          initialValues = _this$props.initialValues,\n          invalid = _this$props.invalid,\n          submitting = _this$props.submitting,\n          pristine = _this$props.pristine;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Segment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Header, {\n      sub: true,\n      color: \"teal\",\n      content: \"Event Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), React.createElement(Form, {\n      onSubmit: this.props.handleSubmit(this.onFormSubmit),\n      autoComplete: \"off\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(Field, {\n      name: \"title\",\n      component: TextInput,\n      placeholder: \"Give Your Event a Name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"category\",\n      component: SelectInput,\n      options: category,\n      placeholder: \"What is Your Event About\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"description\",\n      component: TestArea,\n      rows: 3,\n      placeholder: \"Tell us about your event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Header, {\n      sub: true,\n      color: \"teal\",\n      content: \"Event Details\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"city\",\n      component: TextInput,\n      placeholder: \"Event City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"venue\",\n      component: TextInput,\n      placeholder: \"Event Venue\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(Field, {\n      name: \"date\",\n      component: Da,\n      placeholder: \"Event Date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), React.createElement(Button, {\n      disabled: invalid || submitting || pristine,\n      positive: true,\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(Button, {\n      onClick: initialValues.id ? () => history.push(\"/events/\".concat(initialValues.id)) : () => history.push(\"events\"),\n      type: \"button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"Cancel\")))));\n  }\n\n}\n\nexport default connect(mapState, actions)(reduxForm({\n  form: \"eventForm\",\n  validate\n})(EventForm));","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/Crud-Redux-App/src/Features/Event/EventForm/EventForm.jsx"],"names":["React","Component","connect","reduxForm","Field","composeValidators","combineValidators","isRequired","hasLengthGreaterThan","Segment","Form","Button","Grid","Header","createEvent","updateEvent","cuid","TextInput","TestArea","SelectInput","mapState","state","ownProps","eventId","match","params","id","event","events","length","filter","initialValues","actions","validate","title","message","category","description","city","venue","key","text","value","EventForm","onFormSubmit","values","props","history","push","newEvent","hostPhotoURL","hostedBy","render","invalid","submitting","pristine","handleSubmit","Da","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, Field } from \"redux-form\";\nimport {\n  composeValidators,\n  combineValidators,\n  isRequired,\n  hasLengthGreaterThan\n} from \"revalidate\";\nimport { Segment, Form, Button, Grid, Header } from \"semantic-ui-react\";\nimport { createEvent, updateEvent } from \"../eventActions\";\nimport cuid from \"cuid\";\nimport TextInput from \"../../../app/common/form/TextInput\";\nimport TestArea from \"../../../app/common/form/TestArea\";\nimport SelectInput from \"../../../app/common/form/SelectInput\";\n\nconst mapState = (state, ownProps) => {\n  const eventId = ownProps.match.params.id;\n\n  let event = {};\n\n  if (eventId && state.events.length > 0) {\n    event = state.events.filter(event => event.id === eventId)[0];\n  }\n  return {\n    initialValues: event\n  };\n};\n\nconst actions = {\n  createEvent,\n  updateEvent\n};\n\n//CombineValidators connect it staraight to the redux form\nconst validate = combineValidators({\n  title: isRequired({\n    message: \"The Event Title is Required\"\n  }),\n  category: isRequired({\n    message: \"Category is Required\"\n  }),\n  description: composeValidators(\n    isRequired({ message: \"Please Enter a Description\" }),\n    hasLengthGreaterThan(4)({\n      message: \"Description need to be at Least Five Characters\"\n    })\n  )(),\n  city: isRequired(\"city\"),\n  venue: isRequired(\"venue\")\n});\n\nconst category = [\n  { key: \"drinks\", text: \"Drinks\", value: \"drinks\" },\n  { key: \"culture\", text: \"Culture\", value: \"culture\" },\n  { key: \"film\", text: \"Film\", value: \"film\" },\n  { key: \"food\", text: \"Food\", value: \"food\" },\n  { key: \"music\", text: \"Music\", value: \"music\" },\n  { key: \"travel\", text: \"Travel\", value: \"travel\" }\n];\nclass EventForm extends Component {\n  onFormSubmit = values => {\n    if (this.props.initialValues.id) {\n      this.props.updateEvent(values);\n      this.props.history.push(`/events/${this.props.initialValues.id}`);\n    } else {\n      const newEvent = {\n        ...values,\n        id: cuid(),\n        hostPhotoURL: \"./assets/user.png\",\n        hostedBy: \"Bob \"\n      };\n      this.props.createEvent(newEvent);\n      this.props.history.push(`/events/${newEvent.id}`);\n    }\n  };\n\n  render() {\n    const {\n      history,\n      initialValues,\n      invalid,\n      submitting,\n      pristine\n    } = this.props;\n    return (\n      <Grid>\n        <Grid.Column width={10}>\n          <Segment>\n            <Header sub color='teal' content='Event Details' />\n            <Form\n              onSubmit={this.props.handleSubmit(this.onFormSubmit)}\n              autoComplete='off'\n            >\n              <Field\n                name='title'\n                component={TextInput}\n                placeholder='Give Your Event a Name'\n              />\n              <Field\n                name='category'\n                component={SelectInput}\n                options={category}\n                placeholder='What is Your Event About'\n              />\n              <Field\n                name='description'\n                component={TestArea}\n                rows={3}\n                placeholder='Tell us about your event'\n              />\n              <Header sub color='teal' content='Event Details' />\n              <Field\n                name='city'\n                component={TextInput}\n                placeholder='Event City'\n              />\n              <Field\n                name='venue'\n                component={TextInput}\n                placeholder='Event Venue'\n              />\n              <Field\n                name='date'\n                component={Da}\n                placeholder='Event Date'\n              />\n              <Button\n                disabled={invalid || submitting || pristine}\n                positive\n                type='submit'\n              >\n                Submit\n              </Button>\n              <Button\n                onClick={\n                  initialValues.id\n                    ? () => history.push(`/events/${initialValues.id}`)\n                    : () => history.push(\"events\")\n                }\n                type='button'\n              >\n                Cancel\n              </Button>\n            </Form>\n          </Segment>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default connect(\n  mapState,\n  actions\n)(reduxForm({ form: \"eventForm\", validate })(EventForm));\n"]},"metadata":{},"sourceType":"module"}