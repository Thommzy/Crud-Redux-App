{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/revents/src/Features/Event/EventDashboard/EventDashboard.jsx\";\nimport React, { Component } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport EventList from \"../EventList/EventList\";\nimport EventForm from \"../EventForm/EventForm\";\nimport cuid from \"cuid\";\nconst eventsFromDashboard = [{\n  id: \"1\",\n  title: \"Trip to Tower of London\",\n  date: \"2018-03-27T11:00:00+00:00\",\n  category: \"culture\",\n  description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n  city: \"London, UK\",\n  venue: \"Tower of London, St Katharine's & Wapping, London\",\n  hostedBy: \"Bob\",\n  hostPhotoURL: \"https://randomuser.me/api/portraits/men/20.jpg\",\n  attendees: [{\n    id: \"a\",\n    name: \"Bob\",\n    photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n  }, {\n    id: \"b\",\n    name: \"Tom\",\n    photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n  }]\n}, {\n  id: \"2\",\n  title: \"Trip to Punch and Judy Pub\",\n  date: \"2018-03-28T14:00:00+00:00\",\n  category: \"drinks\",\n  description: \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n  city: \"London, UK\",\n  venue: \"Punch & Judy, Henrietta Street, London, UK\",\n  hostedBy: \"Tom\",\n  hostPhotoURL: \"https://randomuser.me/api/portraits/men/22.jpg\",\n  attendees: [{\n    id: \"b\",\n    name: \"Tom\",\n    photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n  }, {\n    id: \"a\",\n    name: \"Bob\",\n    photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n  }]\n}];\n\nclass EventDashboard extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      events: eventsFromDashboard,\n      isOpen: false,\n      selectedEvens: null\n    };\n\n    this.handleIsOpenToggle = () => {\n      this.setState(({\n        isOpen\n      }) => ({\n        isOpen: !isOpen\n      }));\n    };\n\n    this.handleCreateEvent = newEvent => {\n      newEvent.id = cuid();\n      newEvent.hostPhotoURL = \"./assets/user.png\";\n      this.setState(({\n        events\n      }) => ({\n        events: [...events, newEvent],\n        isOpen: false\n      }));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          events = _this$state.events,\n          isOpen = _this$state.isOpen;\n    return React.createElement(Grid, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Grid.Column, {\n      width: 10,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(EventList, {\n      events: events,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    })), React.createElement(Grid.Column, {\n      width: 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(Button, {\n      onClick: this.handleIsOpenToggle,\n      positive: true,\n      content: \"Create Event\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }), isOpen && React.createElement(EventForm, {\n      createEvent: this.handleCreateEvent,\n      cancelFormOpen: this.handleIsOpenToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default EventDashboard;","map":{"version":3,"sources":["/Applications/XAMPP/xamppfiles/htdocs/revents/src/Features/Event/EventDashboard/EventDashboard.jsx"],"names":["React","Component","Grid","Button","EventList","EventForm","cuid","eventsFromDashboard","id","title","date","category","description","city","venue","hostedBy","hostPhotoURL","attendees","name","photoURL","EventDashboard","state","events","isOpen","selectedEvens","handleIsOpenToggle","setState","handleCreateEvent","newEvent","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Grid, Button } from \"semantic-ui-react\";\nimport EventList from \"../EventList/EventList\";\nimport EventForm from \"../EventForm/EventForm\";\nimport cuid from \"cuid\";\n\nconst eventsFromDashboard = [\n  {\n    id: \"1\",\n    title: \"Trip to Tower of London\",\n    date: \"2018-03-27T11:00:00+00:00\",\n    category: \"culture\",\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n    city: \"London, UK\",\n    venue: \"Tower of London, St Katharine's & Wapping, London\",\n    hostedBy: \"Bob\",\n    hostPhotoURL: \"https://randomuser.me/api/portraits/men/20.jpg\",\n    attendees: [\n      {\n        id: \"a\",\n        name: \"Bob\",\n        photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n      },\n      {\n        id: \"b\",\n        name: \"Tom\",\n        photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n      }\n    ]\n  },\n  {\n    id: \"2\",\n    title: \"Trip to Punch and Judy Pub\",\n    date: \"2018-03-28T14:00:00+00:00\",\n    category: \"drinks\",\n    description:\n      \"Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus sollicitudin ligula eu leo tincidunt, quis scelerisque magna dapibus. Sed eget ipsum vel arcu vehicula ullamcorper.\",\n    city: \"London, UK\",\n    venue: \"Punch & Judy, Henrietta Street, London, UK\",\n    hostedBy: \"Tom\",\n    hostPhotoURL: \"https://randomuser.me/api/portraits/men/22.jpg\",\n    attendees: [\n      {\n        id: \"b\",\n        name: \"Tom\",\n        photoURL: \"https://randomuser.me/api/portraits/men/22.jpg\"\n      },\n      {\n        id: \"a\",\n        name: \"Bob\",\n        photoURL: \"https://randomuser.me/api/portraits/men/20.jpg\"\n      }\n    ]\n  }\n];\n\nclass EventDashboard extends Component {\n  state = {\n    events: eventsFromDashboard,\n    isOpen: false,\n    selectedEvens: null\n  };\n\n  handleIsOpenToggle = () => {\n    this.setState(({ isOpen }) => ({\n      isOpen: !isOpen\n    }));\n  };\n\n  handleCreateEvent = newEvent => {\n    newEvent.id = cuid();\n    newEvent.hostPhotoURL = \"./assets/user.png\";\n    this.setState(({ events }) => ({\n      events: [...events, newEvent],\n      isOpen: false\n    }));\n  };\n  render() {\n    const { events, isOpen } = this.state;\n    return (\n      <Grid>\n        <Grid.Column width={10}>\n          <EventList events={events} />\n        </Grid.Column>\n        <Grid.Column width={6}>\n          <Button\n            onClick={this.handleIsOpenToggle}\n            positive\n            content='Create Event'\n          />\n          {isOpen && (\n            <EventForm\n              createEvent={this.handleCreateEvent}\n              cancelFormOpen={this.handleIsOpenToggle}\n            />\n          )}\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nexport default EventDashboard;\n"]},"metadata":{},"sourceType":"module"}