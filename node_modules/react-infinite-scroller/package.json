{
  "_args": [
    [
      {
        "raw": "react-infinite-scroller@^1.2.4",
        "scope": null,
        "escapedName": "react-infinite-scroller",
        "name": "react-infinite-scroller",
        "rawSpec": "^1.2.4",
        "spec": ">=1.2.4 <2.0.0",
        "type": "range"
      },
      "/Applications/XAMPP/xamppfiles/htdocs/revents"
    ]
  ],
  "_from": "react-infinite-scroller@^1.2.4",
  "_hasShrinkwrap": false,
  "_id": "react-infinite-scroller@1.2.4",
  "_location": "/react-infinite-scroller",
  "_nodeVersion": "9.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-infinite-scroller_1.2.4_1545666740581_0.4961046041224746"
  },
  "_npmUser": {
    "name": "danbovey",
    "email": "dan@danbovey.uk"
  },
  "_npmVersion": "6.4.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-infinite-scroller@^1.2.4",
    "scope": null,
    "escapedName": "react-infinite-scroller",
    "name": "react-infinite-scroller",
    "rawSpec": "^1.2.4",
    "spec": ">=1.2.4 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-infinite-scroller/-/react-infinite-scroller-1.2.4.tgz",
  "_shasum": "f67eaec4940a4ce6417bebdd6e3433bfc38826e9",
  "_shrinkwrap": null,
  "_spec": "react-infinite-scroller@^1.2.4",
  "_where": "/Applications/XAMPP/xamppfiles/htdocs/revents",
  "author": {
    "name": "CassetteRocks"
  },
  "bugs": {
    "url": "https://github.com/CassetteRocks/react-infinite-scroller/issues"
  },
  "dependencies": {
    "prop-types": "^15.5.8"
  },
  "description": "Infinite scroll component for React in ES6",
  "devDependencies": {
    "babel-cli": "^6.6.5",
    "babel-core": "^6.26.3",
    "babel-eslint": "^7.2.3",
    "babel-istanbul": "^0.12.2",
    "babel-loader": "^7.0.0",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-plugin-istanbul": "^4.1.6",
    "babel-plugin-transform-object-rest-spread": "^6.23.0",
    "babel-preset-es2015": "^6.6.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-2": "^6.13.0",
    "chai": "^3.5.0",
    "chai-enzyme": "^0.6.1",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "eslint": "^4.10.0",
    "eslint-config-last": "^0.0.3",
    "eslint-config-prettier": "^2.6.0",
    "eslint-plugin-prettier": "^2.3.1",
    "eslint-plugin-react": "^7.4.0",
    "husky": "^0.14.3",
    "istanbul": "^0.4.5",
    "jsdom": "^10.0.0",
    "lint-staged": "^4.3.0",
    "mkdirp": "^0.5.1",
    "mocha": "^3.3.0",
    "nyc": "^10.2.0",
    "prettier": "^1.7.4",
    "react": "^16.0.0",
    "react-dom": "^16.0.0",
    "react-test-renderer": "^16.0.0",
    "sinon": "^2.1.0",
    "webpack": "^2.5.1"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-/oOa0QhZjXPqaD6sictN2edFMsd3kkMiE19Vcz5JDgHpzEJVqYcmq+V3mkwO88087kvKGe1URNksHEOt839Ubw==",
    "shasum": "f67eaec4940a4ce6417bebdd6e3433bfc38826e9",
    "tarball": "https://registry.npmjs.org/react-infinite-scroller/-/react-infinite-scroller-1.2.4.tgz",
    "fileCount": 14,
    "unpackedSize": 211188,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcIQC1CRA9TVsSAnZWagAApZUP/j2a1DZxd+G5rCgSmvhj\nbOtcEYuWwz2y4cay+EdXWwVNOi5tC84KHgMSJmuUQATGOsucmrSLCEvaSxea\nM6Ql+NiaFFLVdvnOFSsNE3lzxNjHOhH9teyOSv1ZtXBnISpbU5KJ9ceHiFvs\nT6VgL1yTpT66t09hs6UQ/UhUH9pnkc0PiJcV7B3jZTTF9hH231+qy4R7Y6NY\nk0gTRKQEct3KUC9jV+44cg6Y7fHk2T6maq+bzMJ9skxOB6SYLLcnxOPU6wCb\nK4Xds74PL9gCIOZ3SIc1tc5maL83Qhc0rfgXfreK3VUmE5usaI0tLFHlo5k/\n9y4VVx8kWOIgm2tnAirkbqu4HLxrDlupmpurcme3IMticMUyT7+Hib2NTCJP\nw3WzqiOdq1VVRLbXuhuSJS80sIf+zGPG0+0dTasd/RdZysrEMtNeIO8QtQQj\nfiqsPWtjaG2zX439ABOJ/mDH68m2zHP6j77vjCm0pI3PJod9H4ptIZ/Q3fz/\nH7Oot9m8ZhlOld9bElxoa4QM8lpJTnmR6rcejtzn8jkEIw6iZVT6BQuf5KYi\nC/NJDyd1JYgfiKVvR8N/fEfpGn+n2+B4gvYyQMH9ATw2NLE6s/M+5D0pkX5L\nEF2joqvtuNKD52ZruL4Cdoalv2wR/0Wvxv93MF7eozje5ZXQUT62tq1gMzYC\nVnOc\r\n=hl/L\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "a96b85514851eeb07140d14593306e5c599ab2aa",
  "homepage": "https://github.com/CassetteRocks/react-infinite-scroller#readme",
  "jsnext:main": "src/InfiniteScroll.js",
  "keywords": [
    "infinite",
    "scroll",
    "react"
  ],
  "license": "MIT",
  "lint-staged": {
    "*.{js,jsx}": [
      "node_modules/.bin/eslint ./src ./test --fix --max-warnings 0 --no-ignore",
      "git add"
    ]
  },
  "main": "index.js",
  "maintainers": [
    {
      "name": "danbovey",
      "email": "dan@danbovey.uk"
    }
  ],
  "name": "react-infinite-scroller",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.9 || ^15.3.0 || ^16.0.0"
  },
  "readme": "React Infinite Scroller\n=======================\n\n[![Travis](https://img.shields.io/travis/CassetteRocks/react-infinite-scroller.svg?style=flat-square)](https://travis-ci.org/CassetteRocks/react-infinite-scroller)\n[![npm](https://img.shields.io/npm/dt/react-infinite-scroller.svg?style=flat-square)](https://www.npmjs.com/package/react-infinite-scroller)\n[![React Version](https://img.shields.io/badge/React-%5E0.14.9%20%7C%7C%20%5E15.3.0%20%7C%7C%20%5E16.0.0-blue.svg?style=flat-square)](https://www.npmjs.com/package/react)\n[![npm](https://img.shields.io/npm/v/react-infinite-scroller.svg?style=flat-square)](https://www.npmjs.com/package/react-infinite-scroller)\n[![npm](https://img.shields.io/npm/l/react-infinite-scroller.svg?style=flat-square)](https://github.com/CassetteRocks/react-infinite-scroller/blob/master/LICENSE)\n\nInfinitely load content using a React Component. This fork maintains a simple, lightweight infinite scroll package that supports both `window` and scrollable elements.\n\n- [Demo](https://cassetterocks.github.io/react-infinite-scroller/demo/)\n- [Demo Source](https://github.com/CassetteRocks/react-infinite-scroller/blob/master/docs/src/index.js)\n\n## Installation\n\n```\nnpm install react-infinite-scroller --save\n```\n```\nyarn add react-infinite-scroller\n```\n\n## How to use\n\n```js\nimport InfiniteScroll from 'react-infinite-scroller';\n```\n\n### Window scroll events\n\n```js\n<InfiniteScroll\n    pageStart={0}\n    loadMore={loadFunc}\n    hasMore={true || false}\n    loader={<div className=\"loader\" key={0}>Loading ...</div>}\n>\n    {items} // <-- This is the content you want to load\n</InfiniteScroll>\n```\n\n### DOM scroll events\n\n```js\n<div style=\"height:700px;overflow:auto;\">\n    <InfiniteScroll\n        pageStart={0}\n        loadMore={loadFunc}\n        hasMore={true || false}\n        loader={<div className=\"loader\" key={0}>Loading ...</div>}\n        useWindow={false}\n    >\n        {items}\n    </InfiniteScroll>\n</div>\n```\n\n### Custom parent element\n\nYou can define a custom `parentNode` element to base the scroll calulations on.\n\n```js\n<div style=\"height:700px;overflow:auto;\" ref={(ref) => this.scrollParentRef = ref}>\n    <div>\n        <InfiniteScroll\n            pageStart={0}\n            loadMore={loadFunc}\n            hasMore={true || false}\n            loader={<div className=\"loader\" key={0}>Loading ...</div>}\n            useWindow={false}\n            getScrollParent={() => this.scrollParentRef}\n        >\n            {items}\n        </InfiniteScroll>\n    </div>\n</div>\n```\n\n## Props\n\n| Name             | Type          | Default    | Description|\n|:----             |:----          |:----       |:----|\n| `element`        | `Component`      | `'div'`    | Name of the element that the component should render as.|\n| `hasMore`        | `Boolean`     | `false`    | Whether there are more items to be loaded. Event listeners are removed if `false`.|\n| `initialLoad`    | `Boolean`     | `true`     | Whether the component should load the first set of items.|\n| `isReverse`      | `Boolean`     | `false`    | Whether new items should be loaded when user scrolls to the top of the scrollable area.|\n| `loadMore`       | `Function`    |            | A callback when more items are requested by the user. Receives a single parameter specifying the page to load e.g. `function handleLoadMore(page) { /* load more items here */ }` }|\n| `loader`         | `Component`   |            | A React component to render while more items are loading. The parent component must have a unique key prop. |\n| `pageStart`      | `Number`      | `0`        | The number of the first page to load, With the default of `0`, the first page is `1`.|\n| `getScrollParent`   | `Function`|           | Override method to return a different scroll listener if it's not the immediate parent of InfiniteScroll. |\n| `threshold`      | `Number`     | `250`      | The distance in pixels before the end of the items that will trigger a call to `loadMore`.|\n| `useCapture`     | `Boolean`     | `false`     | Proxy to the `useCapture` option of the added event listeners.|\n| `useWindow`      | `Boolean`     | `true`     | Add scroll listeners to the window, or else, the component's `parentNode`.|\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/CassetteRocks/react-infinite-scroller.git"
  },
  "scripts": {
    "build": "mkdirp dist && babel src/InfiniteScroll.js --out-file dist/InfiniteScroll.js",
    "lint": "eslint ./src ./test",
    "precommit": "lint-staged",
    "prepublish": "npm run build",
    "spec": "_mocha -R spec ./test/test_helper.js --recursive test/*_test.js",
    "test": "nyc npm run spec"
  },
  "version": "1.2.4"
}
