{
  "_args": [
    [
      {
        "raw": "react-redux-firebase@^2.2.6",
        "scope": null,
        "escapedName": "react-redux-firebase",
        "name": "react-redux-firebase",
        "rawSpec": "^2.2.6",
        "spec": ">=2.2.6 <3.0.0",
        "type": "range"
      },
      "/Applications/XAMPP/xamppfiles/htdocs/revents"
    ]
  ],
  "_from": "react-redux-firebase@^2.2.6",
  "_hasShrinkwrap": false,
  "_id": "react-redux-firebase@2.2.6",
  "_location": "/react-redux-firebase",
  "_nodeVersion": "10.15.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-redux-firebase_2.2.6_1546383648767_0.5922742784231221"
  },
  "_npmUser": {
    "name": "prescottprue",
    "email": "sprue.dev@gmail.com"
  },
  "_npmVersion": "5.1.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-redux-firebase@^2.2.6",
    "scope": null,
    "escapedName": "react-redux-firebase",
    "name": "react-redux-firebase",
    "rawSpec": "^2.2.6",
    "spec": ">=2.2.6 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-redux-firebase/-/react-redux-firebase-2.2.6.tgz",
  "_shasum": "af72ff7be29c543c42139545619fbb66c564f5d1",
  "_shrinkwrap": null,
  "_spec": "react-redux-firebase@^2.2.6",
  "_where": "/Applications/XAMPP/xamppfiles/htdocs/revents",
  "author": {
    "name": "Prescott Prue",
    "url": "https://github.com/prescottprue"
  },
  "bugs": {
    "url": "https://github.com/prescottprue/react-redux-firebase/issues"
  },
  "collective": {
    "type": "opencollective",
    "url": "https://opencollective.com/react-redux-firebase",
    "logo": "https://opencollective.com/opencollective/logo.txt"
  },
  "dependencies": {
    "hoist-non-react-statics": "^2.3.1",
    "lodash": "^4.17.11",
    "prop-types": "^15.6.2"
  },
  "description": "Redux integration for Firebase. Comes with a Higher Order Components for use with React.",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-core": "^6.26.0",
    "babel-eslint": "^8.0.1",
    "babel-loader": "^7.1.2",
    "babel-plugin-add-module-exports": "^0.2.1",
    "babel-plugin-lodash": "^3.2.11",
    "babel-plugin-module-resolver": "^3.1.1",
    "babel-plugin-transform-async-to-generator": "^6.24.1",
    "babel-plugin-transform-class-properties": "^6.24.0",
    "babel-plugin-transform-export-extensions": "^6.22.0",
    "babel-plugin-transform-object-assign": "^6.22.0",
    "babel-plugin-transform-object-rest-spread": "^6.26.0",
    "babel-plugin-transform-runtime": "^6.23.0",
    "babel-preset-env": "^1.6.0",
    "babel-preset-react": "^6.23.0",
    "babel-register": "^6.24.0",
    "chai": "^3.5.0",
    "chai-as-promised": "^6.0.0",
    "chai-enzyme": "^0.8.0",
    "child-process-promise": "^2.2.1",
    "codecov": "^3.1.0",
    "cross-env": "^5.1.0",
    "docdown": "^0.7.2",
    "documentation": "^5.3.2",
    "documentation-markdown-api-theme": "^1.0.2",
    "enzyme": "^2.3.0",
    "eslint": "^4.8.0",
    "eslint-config-prettier": "^2.3.0",
    "eslint-config-standard": "^10.2.1",
    "eslint-config-standard-react": "^5.0.0",
    "eslint-plugin-babel": "^4.1.2",
    "eslint-plugin-import": "^2.7.0",
    "eslint-plugin-node": "^5.2.0",
    "eslint-plugin-prettier": "^2.1.2",
    "eslint-plugin-promise": "^3.5.0",
    "eslint-plugin-react": "^7.4.0",
    "eslint-plugin-standard": "^3.0.1",
    "firebase": "4.12.0",
    "firebase-server": "^0.12.0",
    "gitbook-cli": "^2.3.2",
    "husky": "^0.14.3",
    "istanbul": "1.1.0-alpha.1",
    "jsdom": "^11.10.0",
    "mocha": "^3.5.3",
    "prettier": "1.10.2",
    "react": "^15.4.2",
    "react-addons-test-utils": "^15.4.2",
    "react-dom": "^15.4.2",
    "recompose": "^0.26.0",
    "redux": "4.0.0",
    "redux-firestore": "0.5.7",
    "rimraf": "^2.6.2",
    "sinon": "^3.3.0",
    "sinon-chai": "^2.14.0",
    "webpack": "^3.6.0",
    "webpack-bundle-analyzer": "^2.9.0",
    "ws": "^3.2.0",
    "xmlhttprequest": "^1.8.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-PJzcwZOisRuS9yoHj6Fidwvl8rdKTbjr14U6DOqdSfxJkz1CkpL8GDXjck1pXCdZ/TgijxWMCiveRGAzq+w6gA==",
    "shasum": "af72ff7be29c543c42139545619fbb66c564f5d1",
    "tarball": "https://registry.npmjs.org/react-redux-firebase/-/react-redux-firebase-2.2.6.tgz",
    "fileCount": 102,
    "unpackedSize": 1161922,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJcK/EhCRA9TVsSAnZWagAApccP/1pfxQQeA8pEI0JYOhEV\nO1n9X3VNGl8FaKDOXzZN4gL9f64fRc7qqP2HSAENHOwLReIth1dczwXkWLLg\nTvqXqbCw3/LffADc9vBPmD8Rv6DNfl6qhGrcQuKWyKZJf0viO6+QRNtMYvtU\n1zK4KZzoJ/3dcnIYkLDUurEU/d53XGm80mLgLWumXZEXnh/8HtMjiKBa8faP\n/WwNBAyfEb8f/7Q4dliVVfNU/3RUjoH4lix517AAZPAOMjEKERZZZg2O+Ub/\n0gsO8V26s8qhtwT+DnVw8Iq7ekHxlOkKTLEG4ZcrnUtOsY+JV1a8InIsgIiA\n33Lj38hFfE16GktjuBbLRki2WCvRq+E5X5qMcADhjVb0lc5Uy7VSXE67o45d\ngEndQALQey7urk20GVN8YFWa+Sj1r68nAT6KAvmjXwge6mvLQN1JI4Zf8Prb\nc7MnXSeyPahaW09sy+PQkU9AVZCVYo8useyiyFwdKeV5+P2VmKwV5R1Tb2zn\nG34/gs+YjFiQhWjinu0JZKrxAKkSeridsqhu3fe+HImYQOZRn9sxW1C/yggE\nFzdONy6SgE5i0j8wF2Llr1C7TKRaEqlAt60mUXidvJLp3jy4u4BrX/DrkuRr\nSx227yylWrgP2Wv3gtHJ6WOZ86PtMqVxxpUZt2bsG6RlbK4vHJjwZ4eqlMuV\n21xx\r\n=/BgY\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "gitHead": "cb2a56a234a1a020c08947bb52fb43d3e9c6d7a3",
  "homepage": "http://react-redux-firebase.com",
  "jsnext:main": "es/index.js",
  "keywords": [
    "firebase",
    "redux",
    "react",
    "react-redux",
    "redux-firebase",
    "react",
    "babel",
    "hoc",
    "redux-react-firebase"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "fej-snikduj",
      "email": "fej.snikduj@gmail.com"
    },
    {
      "name": "prescottprue",
      "email": "sprue.dev@gmail.com"
    },
    {
      "name": "reside-eng",
      "email": "eng@residenetwork.com"
    }
  ],
  "module": "es/index.js",
  "name": "react-redux-firebase",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14.6 || ^15.0.0-0 || ^16.0.0-0"
  },
  "readme": "# react-redux-firebase\n\n[![NPM version][npm-image]][npm-url]\n[![NPM downloads][npm-downloads-image]][npm-url]\n[![Quality][quality-image]][quality-url]\n[![Code Coverage][coverage-image]][coverage-url]\n[![Code Style][code-style-image]][code-style-url]\n[![License][license-image]][license-url]\n[![Build Status][travis-image]][travis-url]\n[![Dependency Status][daviddm-image]][daviddm-url]\n\n[![Gitter][gitter-image]][gitter-url]\n\n> Redux bindings for Firebase. Includes Higher Order Component (HOC) for use with React.\n\n## [Demo](https://demo.react-redux-firebase.com)\n\nThe [Material Example](https://github.com/prescottprue/react-redux-firebase/tree/master/examples/complete/material) is deployed to [demo.react-redux-firebase.com](https://demo.react-redux-firebase.com).\n\n## Features\n\n- Out of the box support for authentication (with auto load user profile)\n- Full Firebase Platform Support Including Real Time Database, Firestore, and Storage\n- Automatic binding/unbinding of listeners through React Higher Order Components (`firebaseConnect`  and `firestoreConnect`)\n- [Population capability](http://react-redux-firebase.com/docs/populate) (similar to mongoose's `populate` or SQL's `JOIN`)\n- Support small data ( using `value` ) or large datasets ( using `child_added`, `child_removed`, `child_changed` )\n- Multiple queries types supported including `orderByChild`, `orderByKey`, `orderByValue`, `orderByPriority`, `limitToLast`, `limitToFirst`, `startAt`, `endAt`, `equalTo`\n- Tons of examples of integrations including [`redux-thunk`](https://github.com/gaearon/redux-thunk) and [`redux-observable`](https://redux-observable.js.org/)\n- Server Side Rendering Support\n- [`react-native` support](http://react-redux-firebase.com/docs/integrations/react-native.html) using [native modules](http://react-redux-firebase.com/docs/integrations/react-native.html#native-modules) or [web sdk](http://react-redux-firebase.com/docs/integrations/react-native.html#jsweb)\n\n## Installation\n\nInterested in support for [`react-redux@^6`](https://github.com/reduxjs/react-redux) or the [new react context API](https://reactjs.org/docs/context.html)? Checkout [the `next` branch which contains the next upcoming major version](https://github.com/prescottprue/react-redux-firebase/tree/next) (installed through `npm i --save react-redux-firebase@next`).\n\n```bash\nnpm install --save react-redux-firebase\n```\n\nThis assumes you are using [npm](https://www.npmjs.com/) as your package manager.\n\nIf you're not, you can access the library on [unpkg](https://unpkg.com/redux-firestore@latest/dist/redux-firestore.min.js), download it, or point your package manager to it. Theres more on this in the [Builds section below](#builds).\n\n## Use\n\nInclude `reactReduxFirebase` (store enhancer) and  `firebaseReducer` (reducer) while creating your redux store:\n\n```javascript\nimport React from 'react'\nimport { render } from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { createStore, combineReducers, compose } from 'redux'\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase'\nimport firebase from 'firebase'\n// import { reduxFirestore, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\n// import 'firebase/firestore' // <- needed if using firestore\n// import 'firebase/functions' // <- needed if using httpsCallable\n\nconst firebaseConfig = {}\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: 'users',\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n}\n\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig)\n\n// Initialize other services on firebase instance\n// firebase.firestore() // <- needed if using firestore\n// firebase.functions() // <- needed if using httpsCallable\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  // reduxFirestore(firebase) // <- needed if using firestore\n)(createStore)\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  // firestore: firestoreReducer // <- needed if using firestore\n})\n\n// Create store with reducers and initial state\nconst initialState = {}\nconst store = createStoreWithFirebase(rootReducer, initialState)\n\n// Setup react-redux so that connect HOC can be used\nconst App = () => (\n  <Provider store={store}>\n    <Todos />\n  </Provider>\n);\n\nrender(<App/>, document.getElementById('root'));\n```\n\nThe Firebase instance can then be grabbed from context within your components (`withFirebase` and `firebaseConnect` Higher Order Components provided to help):\n\n**Add Data**\n\n```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { withFirebase } from 'react-redux-firebase'\n\nconst Todos = ({ firebase }) => {\n  const sampleTodo = { text: 'Sample', done: false }\n  const pushSample = () => firebase.push('todos', sampleTodo)\n  return (\n    <div>\n      <h1>Todos</h1>\n      <ul>\n        {todosList}\n      </ul>\n      <input type=\"text\" ref=\"newTodo\" />\n      <button onClick={pushSample}>\n        Add\n      </button>\n    </div>\n  )\n}\n\nexport default withFirebase(Todos)\n// or firebaseConnect()(Todos)\n```\n\n**Load Data (listeners automatically managed on mount/unmount)**\n\n```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firebaseConnect, isLoaded, isEmpty } from 'react-redux-firebase'\n\nconst Todos = ({ todos, firebase }) => {\n  // Build Todos list if todos exist and are loaded\n  const todosList = !isLoaded(todos)\n    ? 'Loading'\n    : isEmpty(todos)\n      ? 'Todo list is empty'\n      : Object.keys(todos).map(\n          (key, id) => (\n            <TodoItem key={key} id={id} todo={todos[key]}/>\n          )\n        )\n  return (\n    <div>\n      <h1>Todos</h1>\n      <ul>\n        {todosList}\n      </ul>\n      <input type=\"text\" ref=\"newTodo\" />\n      <button onClick={this.handleAdd}>\n        Add\n      </button>\n    </div>\n  )\n}\n\nexport default compose(\n  firebaseConnect([\n    'todos' // { path: '/todos' } // object notation\n  ]),\n  connect((state) => ({\n    todos: state.firebase.data.todos,\n    // profile: state.firebase.profile // load profile\n  }))\n)(Todos)\n```\n\n**Queries Based On Props**\n\nIt is common to make a detail page that loads a single item instead of a whole list of items. A query for a specific `Todos` can be created using\n\n```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { firebaseConnect, getVal } from 'react-redux-firebase'\n\n// Component enhancer that loads todo into redux then into the todo prop\nconst enhance = compose(\n  firebaseConnect((props) => {\n    // Set listeners based on props (prop is route parameter from react-router in this case)\n    return [\n      { path: `todos/${props.params.todoId}` }, // create todo listener\n      // `todos/${props.params.todoId}` // equivalent string notation\n    ]\n  }),\n  connect(({ firebase }, props) => ({\n    todo: getVal(firebase, `data/todos/${props.params.todoId}`), // lodash's get can also be used\n  }))\n)\n\nconst Todo = ({ todo, firebase, params }) =>\n  <div>\n    <input\n      name=\"isDone\"\n      type=\"checkbox\"\n      checked={todo.isDone}\n      onChange={() =>\n        firebase.update(`todos/${params.todoId}`, { done: !todo.isDone })\n      }\n    />\n    <span>{todo.label}</span>\n  </div>\n\n// Export enhanced component\nexport default enhance(Todo)\n```\n\n\n**Load Data On Click**\n\n```jsx\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux'\nimport { withFirebase, isLoaded, isEmpty } from 'react-redux-firebase'\n\nconst Todos = ({ firebase }) => {\n  // Build Todos list if todos exist and are loaded\n  const todosList = !isLoaded(todos)\n    ? 'Loading'\n    : isEmpty(todos)\n      ? 'Todo list is empty'\n      : Object.keys(todos).map(\n          (key, id) => <TodoItem key={key} id={id} todo={todos[key]}/>\n        )\n  return (\n    <div>\n      <h1>Todos</h1>\n      <ul>\n        {todosList}\n      </ul>\n      <button onClick={() => firebase.watchEvent('value', 'todos')}>\n        Load Todos\n      </button>\n    </div>\n  )\n}\n\n// Export enhanced component\nexport default compose(\n  withFirebase, // or firebaseConnect()\n  connect((state) => ({\n    todos: state.firebase.data.todos,\n    // profile: state.firebase.profile // load profile\n  }))\n)(Todos)\n```\n\n## Firestore\n\nIf you plan to use Firestore, you should checkout [`redux-firestore`][redux-firestore]. It integrates nicely with `react-redux-firebase` and it allows you to run Real Time Database and Firestore along side each other.\n\n`react-redux-firebase` provides the `firestoreConnect` HOC (similar to `firebaseConnect`) for easy setting/unsetting of listeners.\n\nCurrently `react-redux-firebase` still handles auth when using [`redux-firestore`][redux-firestore] - The future plan is to also have auth standalone auth library that will allow the developer to choose which pieces they do/do not want.\n\n## [Docs](http://react-redux-firebase.com)\nSee full documentation at [react-redux-firebase.com](http://react-redux-firebase.com)\n\n* [Getting Started](http://react-redux-firebase.com/docs/getting_started)\n* [Auth](http://react-redux-firebase.com/docs/auth)\n* [Queries](http://react-redux-firebase.com/docs/queries)\n* [Firestore](http://react-redux-firebase.com/docs/firestore)\n* [Populate](http://react-redux-firebase.com/docs/populate)\n* [API Reference](http://react-redux-firebase.com/docs/api)\n\n## [Examples](examples)\n\n### Real World Applications\n* [fireadmin.io](http://fireadmin.io) - Firebase Instance Management Tool (source [available here](https://github.com/prescottprue/fireadmin))\n\nIf you would like a project added to this section please reach out [over gitter][gitter-url]\n\n### [Examples Folder](examples)\n\nExamples folder is broken into two categories [snippets](examples/snippets) and [complete](examples/complete). `/complete` contains full applications that can be run as is, where as `/snippets` contains small amounts of code to highlight specific functionality (dev tools and deps not included).\n\n#### [State Based Query Snippet](examples/snippets/stateBasedQuery)\n\nSnippet showing querying based on data in redux state. One of the more common examples is querying based on the current users auth UID.\n\n#### [Decorators Snippet](examples/snippets/decorators)\n\nSnippet showing how to use decorators to simplify connect functions (redux's `connect` and react-redux-firebase's `firebaseConnect`)\n\n#### [Simple App Example](examples/complete/simple)\n\nA simple example that was created using [create-react-app](https://github.com/facebookincubator/create-react-app)'s. Shows a list of todo items and allows you to add to them.\n\n#### [Material App Example](examples/complete/material)\n\nAn example that user Material UI built on top of the output of [create-react-app](https://github.com/facebookincubator/create-react-app)'s eject command.  Shows a list of todo items and allows you to add to them. This is what is deployed to [redux-firebasev3.firebaseapp.com](https://redux-firebasev3.firebaseapp.com/).\n\n## Discussion\n\nJoin us on the [redux-firebase gitter](https://gitter.im/redux-firebase/Lobby).\n\n## Integrations\n\nView docs for recipes on integrations with:\n\n* [redux-firestore](http://react-redux-firebase.com/docs/firestore.html)\n* [redux-thunk](http://react-redux-firebase.com/docs/integrations/thunks.html)\n* [redux-observable](http://react-redux-firebase.com/docs/integrations/redux-observable.html)\n* [redux-saga](http://react-redux-firebase.com/docs/integrations/redux-saga.html)\n* [redux-form](http://react-redux-firebase.com/docs/integrations/redux-form.html)\n* [redux-auth-wrapper](http://react-redux-firebase.com/docs/recipes/routing.html#advanced)\n* [redux-persist](http://react-redux-firebase.com/docs/integrations/redux-persist.html)\n* [react-native](http://react-redux-firebase.com/docs/integrations/react-native.html)\n* [react-native-firebase](http://react-redux-firebase.com/docs/integrations/react-native.html#native-modules)\n\n## Starting A Project\n\n### Generator\n\n[generator-react-firebase](https://github.com/prescottprue/generator-react-firebase) is a yeoman generator uses react-redux-firebase when opting to include redux.\n\n### Complete Examples\n\nThe [examples folder](/examples) contains full applications that can be copied/adapted and used as a new project.\n\n## FAQ\n\nPlease visit the [FAQ section of the docs](http://docs.react-redux-firebase.com/history/v2.0.0/docs/FAQ.html)\n\n## Builds\n\nMost commonly people consume Redux Firestore as a [CommonJS module](http://webpack.github.io/docs/commonjs.html). This module is what you get when you import redux in a Webpack, Browserify, or a Node environment.\n\nIf you don't use a module bundler, it's also fine. The redux-firestore npm package includes precompiled production and development [UMD builds](https://github.com/umdjs/umd) in the [dist folder](https://unpkg.com/redux-firestore@latest/dist/). They can be used directly without a bundler and are thus compatible with many popular JavaScript module loaders and environments. For example, you can drop a UMD build as a `<script>` tag on the page. The UMD builds make Redux Firestore available as a `window.ReduxFirestore` global variable.\n\nIt can be imported like so:\n\n```html\n<script src=\"../node_modules/react-redux-firebase/dist/react-redux-firebase.min.js\"></script>\n<!-- or through cdn: <script src=\"https://unpkg.com/react-redux-firebase@latest/dist/react-redux-firebase.min.js\"></script> -->\n<script>console.log('react redux firebase:', window.ReactReduxFirebase)</script>\n```\n\nNote: In an effort to keep things simple, the wording from this explanation was modeled after [the installation section of the Redux Docs](https://redux.js.org/#installation).\n\n## Contributors\n\nThis project exists thanks to all the people who contribute.\n\n<a href=\"https://github.com/prescottprue/react-redux-firebase/graphs/contributors\"><img src=\"https://opencollective.com/react-redux-firebase/contributors.svg?width=890\" /></a>\n\n## Backers\n\nThank you to all our backers! 🙏\n\n* [Reside Network Inc.](https://github.com/reside-eng)\n\n[npm-image]: https://img.shields.io/npm/v/react-redux-firebase.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/react-redux-firebase\n[npm-downloads-image]: https://img.shields.io/npm/dm/react-redux-firebase.svg?style=flat-square\n[quality-image]: http://npm.packagequality.com/shield/react-redux-firebase.svg?style=flat-square\n[quality-url]: https://packagequality.com/#?package=react-redux-firebase\n[backers]:https://opencollective.com/react-redux-firebase/backers/badge.svg?style=flat-square&color=blue\n[become-a-backer]:https://opencollective.com/react-redux-firebase#backer\n[travis-image]: https://img.shields.io/travis/prescottprue/react-redux-firebase/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/prescottprue/react-redux-firebase\n[daviddm-image]: https://img.shields.io/david/prescottprue/react-redux-firebase.svg?style=flat-square\n[daviddm-url]: https://david-dm.org/prescottprue/react-redux-firebase\n[climate-image]: https://img.shields.io/codeclimate/github/prescottprue/react-redux-firebase.svg?style=flat-square\n[climate-url]: https://codeclimate.com/github/prescottprue/react-redux-firebase\n[coverage-image]: https://img.shields.io/codecov/c/github/prescottprue/react-redux-firebase.svg?style=flat-square\n[coverage-url]: https://codecov.io/gh/prescottprue/react-redux-firebase\n[license-image]: https://img.shields.io/npm/l/react-redux-firebase.svg?style=flat-square\n[license-url]: https://github.com/prescottprue/react-redux-firebase/blob/master/LICENSE\n[code-style-image]: https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square\n[code-style-url]: http://standardjs.com/\n[gitter-image]: https://img.shields.io/gitter/room/redux-firebase/gitter.svg?style=flat-square\n[gitter-url]: https://gitter.im/redux-firebase/Lobby\n[redux-firestore]: https://github.com/prescottprue/redux-firestore\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/prescottprue/react-redux-firebase.git"
  },
  "scripts": {
    "build": "npm run build:commonjs && npm run build:es && npm run build:umd && npm run build:umd:min",
    "build:commonjs": "cross-env BABEL_ENV=commonjs babel src --out-dir lib",
    "build:es": "cross-env BABEL_ENV=es babel src --out-dir es",
    "build:size": "cross-env SIZE=true BABEL_ENV=commonjs NODE_ENV=production webpack src/index.js dist/react-redux-firebase.min.js",
    "build:umd": "cross-env BABEL_ENV=commonjs NODE_ENV=development webpack src/index.js dist/react-redux-firebase.js",
    "build:umd:min": "cross-env BABEL_ENV=commonjs NODE_ENV=production webpack src/index.js dist/react-redux-firebase.min.js",
    "clean": "rimraf es lib dist coverage",
    "codecov": "cat coverage/lcov.info | codecov",
    "docs:api": "babel-node bin/api-docs-generate",
    "docs:build": "npm run docs:prepare && gitbook build -g prescottprue/react-redux-firebase && npm run docs:api",
    "docs:clean": "rimraf _book",
    "docs:prepare": "gitbook install",
    "docs:publish": "npm run docs:clean && npm run docs:build && cp CNAME _book && cd _book && git init && git commit --allow-empty -m 'update book' && git checkout -b gh-pages && touch .nojekyll && git add . && git commit -am 'update book' && git push git@github.com:prescottprue/react-redux-firebase gh-pages --force",
    "docs:upload": "babel-node bin/api-docs-upload",
    "docs:watch": "npm run docs:prepare && gitbook serve",
    "format": "prettier --write \"src/**/*.js\" \"test/**/*.js\"",
    "lint": "eslint ./src/** ./bin/** ./test/**/*.js",
    "lint:fix": "npm run lint -- --fix",
    "prepare": "npm run clean && npm run build",
    "prepush": "npm run lint",
    "test": "mocha -R spec ./test/unit/**",
    "test:cov": "istanbul cover $(npm bin)/_mocha ./test/unit/**",
    "watch": "npm run build:commonjs -- --watch",
    "watch:es": "npm run build:es -- --watch"
  },
  "typings": "./index.d.ts",
  "unpkg": "dist/react-redux-firebase.min.js",
  "version": "2.2.6"
}
