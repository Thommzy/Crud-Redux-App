{
  "_args": [
    [
      {
        "raw": "react-redux-toastr@^7.5.1",
        "scope": null,
        "escapedName": "react-redux-toastr",
        "name": "react-redux-toastr",
        "rawSpec": "^7.5.1",
        "spec": ">=7.5.1 <8.0.0",
        "type": "range"
      },
      "/Applications/XAMPP/xamppfiles/htdocs/revents"
    ]
  ],
  "_from": "react-redux-toastr@^7.5.1",
  "_hasShrinkwrap": false,
  "_id": "react-redux-toastr@7.5.1",
  "_location": "/react-redux-toastr",
  "_nodeVersion": "8.9.1",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-redux-toastr_7.5.1_1557764088780_0.9277477614334582"
  },
  "_npmUser": {
    "name": "diegoddox",
    "email": "diegoddox@gmail.com"
  },
  "_npmVersion": "5.5.1",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-redux-toastr@^7.5.1",
    "scope": null,
    "escapedName": "react-redux-toastr",
    "name": "react-redux-toastr",
    "rawSpec": "^7.5.1",
    "spec": ">=7.5.1 <8.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-redux-toastr/-/react-redux-toastr-7.5.1.tgz",
  "_shasum": "7adc9b21665a0f6656493376b9775ea610a105cb",
  "_shrinkwrap": null,
  "_spec": "react-redux-toastr@^7.5.1",
  "_where": "/Applications/XAMPP/xamppfiles/htdocs/revents",
  "author": {
    "name": "Diego Oliveira"
  },
  "betterScripts": {
    "dev-server": {
      "command": "./node_modules/.bin/webpack-dev-server --hot --inline --mode=development --config webpack/development.js",
      "env": {
        "NODE_ENV": "development",
        "NODE_PORT": 4001
      }
    },
    "build_client": {
      "command": "./node_modules/.bin/webpack -p --color --progress --mode=production --config webpack/production.js",
      "env": {
        "NODE_ENV": "production"
      }
    }
  },
  "bugs": {
    "url": "https://github.com/diegoddox/react-redux-toastr/issues"
  },
  "dependencies": {
    "classnames": "^2.2.3",
    "eventemitter3": "^3.1.0"
  },
  "description": "react-redux-toastr is a React toastr message implemented with Redux",
  "devDependencies": {
    "@babel/cli": "^7.2.3",
    "@babel/core": "^7.2.2",
    "@babel/plugin-proposal-class-properties": "^7.2.3",
    "@babel/preset-env": "^7.2.3",
    "@babel/preset-react": "^7.0.0",
    "autoprefixer": "^9.4.4",
    "babel-eslint": "^10.0.1",
    "babel-loader": "^8.0.5",
    "better-npm-run": "^0.1.1",
    "clean-css": "^4.0.11",
    "clean-css-loader": "^1.1.0",
    "concurrently": "^4.1.0",
    "css-loader": "^2.1.0",
    "eslint": "^5.12.0",
    "eslint-loader": "^2.1.1",
    "eslint-plugin-babel": "^5.3.0",
    "eslint-plugin-react": "^7.12.3",
    "file-loader": "^3.0.1",
    "html-webpack-plugin": "^3.2.0",
    "lorem-ipsum": "^1.0.3",
    "mini-css-extract-plugin": "^0.5.0",
    "node-sass": "^4.5.2",
    "postcss-cli": "^6.1.1",
    "postcss-extend": "^1.0.5",
    "postcss-import": "^12.0.1",
    "postcss-mixins": "^6.2.1",
    "postcss-nested": "^4.1.1",
    "postcss-simple-vars": "^5.0.1",
    "prop-types": "^15.5.7",
    "react": "^16.7.0",
    "react-dom": "^16.7.0",
    "react-hot-loader": "^4.6.3",
    "react-redux": "^6.0.0",
    "redux": "^4.0.1",
    "rimraf": "^2.4.4",
    "sass-loader": "^7.1.0",
    "style-loader": "^0.23.1",
    "url-loader": "^1.1.2",
    "webpack": "^4.28.3",
    "webpack-cli": "^3.2.1",
    "webpack-dev-server": "^3.1.14"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-1iD0Ci3SznIK+GHAAy0q331W5J9mA2EV7FO/63ajj+AaJjb9h6SAfTjMUxFcpOaEunicUuQjc72p8aEQ8B3qKA==",
    "shasum": "7adc9b21665a0f6656493376b9775ea610a105cb",
    "tarball": "https://registry.npmjs.org/react-redux-toastr/-/react-redux-toastr-7.5.1.tgz",
    "fileCount": 37,
    "unpackedSize": 151992,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJc2Zf5CRA9TVsSAnZWagAA1dEQAKRdKqJY1Wa6oGpDlbKp\nEVZShPHBoauZ+7N4pU738JZ8vQmFwYEF6Q2CfPAC4fvzn1yI90D0EMiHXEAx\nLNztPopGoQxu5E8wUojpuXKvAL9GQ5lGCMIsBwBOugRpHv4hand/75S7eW84\nrPWrpks4RAYIkOyadoCrXs1GaAvSoo4gaE8VZQUE2RkTSbs9A20hmDPzAb5d\nq13c76w7qqVPaMBnXrHFMg9Drsd2XIPkqov5YCLxoB0AIdxLvONGwYuxPRS4\nNno818xRvjtZlh1rN4uHSi/nxid1/6mZ1EGdoLBNUDkr5BJRhNOx/Rz6o9zw\nfmCkUNPQt1x5r281aeSrPLgcZuw4bhUWu/++L3D72/Q15YWCzYIJDoqucY5V\nVqLQudLc20XjpHW3n2DBMhE8Vvsw4K3ZR9ht9oF3lwrWC+aISeXL7+bZ0MSs\nfoJkI09HRrS4eVwemqyePWK5zTr5LUu4KAOmV+iw22jO6SSbAAdrUmvTBhfZ\n/v/NDI2XBdtR28AOiOpsJupL85kxReMs49vXr8+I6XLQwMd20XvwkTblNO8P\nlue21aOo9oo/RdbBDN8As1vNMS3rRsOpi8Z4set03v2mj/7bvjY9Q+3eLVAw\nfiFXCr9ObzLP3JXMsyqJnd/MGUo9Ne1FKH4cjzVeIApp+UEujZpGBkamzXuW\nsbFs\r\n=11Mo\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "eslintConfig": {
    "root": true
  },
  "files": [
    "src/",
    "lib/",
    "CHANGELOG.md",
    "README.md"
  ],
  "gitHead": "fc90e35c421b05cf782c2b5091c16a345a57541b",
  "homepage": "https://github.com/diegoddox/react-redux-toastr#readme",
  "jsnext:main": "./src/index.js",
  "keywords": [
    "React.js",
    "React",
    "Redux",
    "react",
    "redux toastr",
    "react-redux-toastr",
    "react-component",
    "toastr",
    "alert",
    "toast",
    "message",
    "popup",
    "react toastr",
    "react redux toastr",
    "react toastr redux",
    "react confirm",
    "react alert",
    "avatar",
    "toastr profile"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "diegoddox",
      "email": "diegoddox@gmail.com"
    }
  ],
  "name": "react-redux-toastr",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^0.14 || ^15.0.1 || ^16.0.0",
    "react-redux": "^4.0.1 || ^5.0.1 || ^6.0.0 || ^7.0.0",
    "redux": "^3.0.5 || ^4.0.0",
    "prop-types": "^15.5.7"
  },
  "readme": "## `react-redux-toastr` [demo](http://diegoddox.github.io/react-redux-toastr/)\n\n<a href=\"https://www.npmjs.com/package/react-redux-toastr\"><img src=\"https://img.shields.io/npm/v/react-redux-toastr.svg?style=flat-square\" alt=\"NPM Version\"></a>\n<a href=\"https://npm-stat.com/charts.html?package=react-redux-toastr\"><img src=\"https://img.shields.io/npm/dt/react-redux-toastr.svg?style=flat-square\" alt=\"NPM Downloads\"></a>\n<a href=\"http://packagequality.com/#?package=react-redux-toastr\"><img src=\"http://npm.packagequality.com/shield/react-redux-toastr.svg?style=flat-square\" alt=\"Package Quality\"></a>\n<a href=\"https://github.com/diegoddox/react-redux-toastr/issues?q=is%3Aissue+is%3Aclosed\"><img src=\"https://img.shields.io/github/issues-closed-raw/diegoddox/react-redux-toastr.svg?style=flat-square\" alt=\"Closed Issues\"></a>\n<a href=\"https://github.com/diegoddox/react-redux-toastr/stargazers\"><img src=\"https://img.shields.io/github/stars/diegoddox/react-redux-toastr.svg?style=social&label=Star\" alt=\" GitHub Stars\"></a>\n\n![react-redux-toastr](https://raw.githubusercontent.com/diegoddox/react-redux-toastr/master/assets/toastr.png?style=centerme)\n\n\n`react-redux-toastr` is a React toastr message implemented with [Redux](https://github.com/rackt/redux), primary consists of three things: a reducer, toastr emitter and a React component.\n\nThe reducer listens to dispatched actions from the component to maintain the `toastr` state in Redux.\n\n## Implementation Guide\n\n##### 1. Installation\n\n`npm install --save react-redux-toastr`\n\n##### 2. Add the styles\n\n- import the scss file into to your project.\n\n  ```scss\n  @import 'react-redux-toastr/src/styles/index';\n  ```\n- or import the css file.\n\n```javascript\nimport 'react-redux-toastr/lib/css/react-redux-toastr.min.css'\n```\n- or include the css file from the demo site (**NOTE**: This file can be changed anytime)\n```html\n<link href=\"https://diegoddox.github.io/react-redux-toastr/7.1/react-redux-toastr.min.css\" rel=\"stylesheet\" type=\"text/css\">\n```\n\n##### 3. Add the reducer.\n\n```javascript\nimport {createStore, combineReducers} from 'redux'\nimport {reducer as toastrReducer} from 'react-redux-toastr'\nconst reducers = {\n  // ... other reducers ...\n  toastr: toastrReducer // <- Mounted at toastr.\n}\nconst reducer = combineReducers(reducers)\nconst store = createStore(reducer)\n```\n\n**NOTE**: The default mount point for `react-redux-toastr` is `toastr`.\n\n##### 4. Add the component into an app root\n\n```javascript\nimport {Provider}  from 'react-redux'\nimport ReduxToastr from 'react-redux-toastr'\n\n<Provider store={store}>\n  <div>\n    ... other things like router ...\n    // props are not required\n    <ReduxToastr\n      timeOut={4000}\n      newestOnTop={false}\n      preventDuplicates\n      position=\"top-left\"\n      transitionIn=\"fadeIn\"\n      transitionOut=\"fadeOut\"\n      progressBar\n      closeOnToastrClick/>\n  </div>\n</Provider>\n```\n\nThe default configuration is:\n```js\n{\n  timeOut: 5000,\n  newestOnTop: true,\n  position: 'top-right',\n  transitionIn: 'bounceIn',\n  transitionOut: 'bounceOut',\n  progressBar: false,\n  closeOnToastrClick: false,\n}\n```\n\n**NOTE**: `transitionIn` and `transitionOut` **will affect the confirm** animation as well\n\nHere is the full list of available configurations:\n\n- position: `top-left` `top-center` `top-right`  `bottom-left` `bottom-center` and `bottom-right`\n\n- transitionIn: `bounceIn` `bounceInDown` and `fadeIn`\n\n- transitionOut: `bounceOut` `bounceOutUp` and `fadeOut`\n\n##### 5. Use the emitter\nThe `toastr` method use [eventemitter3](https://github.com/primus/eventemitter3) to dispatch the actions\n\n\n```javascript\nimport React, {Component}  from 'react'\nimport {toastr} from 'react-redux-toastr'\n\nexport class YourComponent extends Component {\n  render() {\n    return (\n      <div>\n        <button\n          onClick={() => toastr.success('The title', 'The message')}\n          type=\"button\">Toastr Success</button>\n      </div>\n    )\n  }\n}\n```\nOr you can bind the `actions` to your component if you prefer.\n\n```javascript\nimport {bindActionCreators} from 'redux'\nimport {actions as toastrActions} from 'react-redux-toastr'\n// In your React component\nconstructor(props) {\n  super(props);\n  // Bind the react-redux-toastr actions to the component\n  this.toastr = bindActionCreators(toastrActions, this.props.dispatch)\n\n  this.toastr.add({\n   id: 'mycustomid', // If not provided we will add one.\n   type: 'success',\n   title: 'your title',\n   position: 'top-left', // This will override the global props position.\n   attention: true, // This will add a shadow like the confirm method.\n   onAttentionClick: (id) => {}, //override default behavior of 'attention' background click.\n   message: 'message',\n   options: {}\n  });\n\n  this.toastr.remove('toastrId');\n}\n```\n\n# Toastr methods\nToastr accepts the following methods: `success`  `info`  `warning`  `light`  `error` `confirm` `message`, `remove` and `removeByType`\n\n##### Toastr: `success`  `info`  `warning`  `light`  `error`  `remove` and `removeByType`\nEach of these methods can take up to three arguments the `title` a `message` and `options`.\n\nIn `options` you can specify `timeOut` `icon` `onShowComplete` `onHideComplete` `className` `component` `removeOnHover`,`removeOnHoverTimeOut`,`showCloseButton`, `onCloseButtonClick`, `onToastrClick`, `progressBar`, `transitionIn`, `position`, `attention`, `onAttentionClick`, `transitionOut` and `closeOnToastrClick`.\n\n``` javascript\nimport {toastr} from 'react-redux-toastr'\n\nconst toastrOptions = {\n  timeOut: 3000, // by setting to 0 it will prevent the auto close\n  icon: (<myCustomIconOrAvatar />), // You can add any component you want but note that the width and height are 70px ;)\n  onShowComplete: () => console.log('SHOW: animation is done'),\n  onHideComplete: () => console.log('HIDE: animation is done'),\n  onCloseButtonClick: () => console.log('Close button was clicked'),\n  onToastrClick: () => console.log('Toastr was clicked'),\n  showCloseButton: true, // false by default\n  closeOnToastrClick: true, // false by default, this will close the toastr when user clicks on it\n  component: ( // this option will give you a func 'remove' as props\n    <MyCustomComponent myProp=\"myValue\">\n      <span>Hello, World!</span>\n    </MyCustomComponent>\n  )\n}\n\ntoastr.success('Title', 'Message', toastrOptions)\ntoastr.info('The message', toastrOptions)\ntoastr.warning('The title', 'The message')\ntoastr.error('The message')\ntoastr.removeByType('error') // Remove all toastrs with the type error.\ntoastr.remove('123') // Removes toastr with id '123'\n```\n\n##### Toastr methods light\n\nThe `light` method is like the other `toastr` except that the `background-color` is `white` and you can add a top\nborder on top of the `toastr` by passing the `status` option\n\n`icon` can be one of the following:\n- `'success'`\n- `'info'`\n- `'warning'`\n- `'error'`\n\n``` javascript\nimport {toastr} from 'react-redux-toastr'\n\nconst toastrType = 'warning';\nconst toastrOptions = {\n  icon: toastrType,\n  status: toastrType\n}\n\ntoastr.light('The title', 'The message', toastrOptions)\n```\n\n##### Toastr: `message`\nUse this one if you wanna show a large amount of information. Unlike the other methods above, it would not close automatically unless you provide a `timeout` in the `message` options.\n\n```javascript\nconst toastrMessageOptions = {\n  timeOut: 3000, // Default value is 0\n  onShowComplete: () => console.log('SHOW: animation is done'),\n  onHideComplete: () => console.log('HIDE: animation is done'),\n  removeOnHover: false, // Default value is false\n  removeOnHoverTimeOut: 1000, // Default value is 1000\n  component: React.Component\n};\ntoastr.message('Title', toastrMessageOptions)\n```\n\n##### Toastr: `confirm`\nThe confirm method takes two arguments. The first one is the message and the second one is an object where you can specify what will happen when the user clicks on `ok` or on the `cancel` buttons or on `keypress` `enter/esc`.\n\nNOTE: You can only have one confirm toastr at the same time. If you have one `confirm` and you fire another it will be ignored.\n\n```javascript\nconst toastrConfirmOptions = {\n  onOk: () => console.log('OK: clicked'),\n  onCancel: () => console.log('CANCEL: clicked')\n};\ntoastr.confirm('Are you sure about that!', toastrConfirmOptions);\n```\n\nYou can add a manually specified CSS ID selector to the confirmation wrapper element by:\n\n- Including an `id` prop in the `toasterConfirmOptions` object:\n\n```javascript\nconst toastrConfirmOptions = {\n  ...\n  id: 'my-custom-id'\n};\ntoastr.confirm('Are you sure about that!', toastrConfirmOptions);\n```\n\nYou can change the `ok` and `cancel` texts by:\n\n- Passing `confirmOptions` to the `ReduxToastr` component:\n\n```javascript\n<!-- please define both keys as this will override default okText & cancelText -->\nconst options = {\n  okText: 'confirm text',\n  cancelText: 'cancel text'\n};\n<ReduxToastr confirmOptions={options}/>\n```\n\n- Passing `okText` and `cancelText` in the `toasterConfirmOptions` object:\n\n```javascript\nconst toastrConfirmOptions = {\n  ...\n  okText: 'confirm text',\n  cancelText: 'cancel text'\n};\n\ntoastr.confirm('Are you sure about that!', toastrConfirmOptions);\n```\n\nYou can make it so `ok` is the only button by:\n\n- Passing `disableCancel` in the `toasterConfirmOptions` object:\n\n```javascript\nconst toastrConfirmOptions = {\n  ...\n  disableCancel: true\n};\n\ntoastr.confirm('You have timed out! Please log back in.', toastrConfirmOptions);\n```\n\nYou can add custom buttons by:\n\n- Passing `buttons` in the `toasterConfirmOptions` object.\n\n  The buttons are inserted after the OK and the cancel buttons.\n  \n  Each button config can have a `text`, `handler` and a `className` property.\n  \n  If you want to move the original OK or cancel buttons to a different postiion, just\n  insert a an object with a single boolean flag: `ok` or `cancel` to the desired position\n  inside buttons. (note that all other properties are ignored in this case).\n\nThe following config leads to 3 buttons in the following order:\n1. \"Apply\" (original OK button)\n2. \"Do not apply\" (our custom button)\n3. \"Cancel\" (original cancel button)\n\n```javascript\nconst toastrConfirmOptions = {\n  ...\n  okText: 'Apply',\n  buttons: [{\n    text: 'Do not apply',\n    className: 'do-not-apply-btn',\n    handler: () => console.log('do-not-apply clicked')\n  }, {\n    cancel: true // move the cancel button to the end\n  }]\n};\n\ntoastr.confirm('Your changes are applicable to 5 more records.', toastrConfirmOptions);\n```\n\nYou can render your custom message component instead of the simple string message by:\n\n- Passing the `component` prop to the `toasterConfirmOptions` object:\n\n```javascript\nconst toastrConfirmOptions = {\n  ...\n  component: () => (\n    <MyCustomComponent myProp=\"myValue\">\n      <span>Hello, World!</span>\n    </MyCustomComponent>\n  )\n};\n\ntoastr.confirm(null, toastrConfirmOptions); // pass null for message\n```\n\n### Avatar: in case you wanna use the same avatar as in the example\n[Avatar](https://github.com/diegoddox/react-redux-toastr/blob/master/development/Avatar.js)\n\n# Run a local demo\n```\ngit clone https://github.com/diegoddox/react-redux-toastr.git\ncd react-redux-toastr\nnpm install\nnpm start\n```\nopen your browser at `http://localhost:3000`\n\n## License\n\n[MIT](LICENSE). Copyright (c) 2016 Diego Oliveira.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/diegoddox/react-redux-toastr.git"
  },
  "scripts": {
    "build": "babel src/ --out-dir lib && npm run sass && npm run postcss",
    "build_app": "concurrently \"npm run clean\" \"npm run lint\" \"npm run build\" \"npm run sass\" \"npm run clean\"",
    "buildc": "better-npm-run build_client",
    "clean": "rimraf dist lib",
    "dev_win": "NODE_ENV=development NODE_PORT=3000 ./node_modules/.bin/webpack-dev-server --hot --inline --config build/webpack.config.js",
    "lint": "./node_modules/eslint/bin/eslint.js --fix .",
    "postcss": "postcss --u autoprefixer -o ./lib/css/react-redux-toastr.min.css ./lib/css/react-redux-toastr.min.css",
    "sass": "node-sass src/styles/index.scss lib/css/react-redux-toastr.min.css --output-style compressed",
    "start": "better-npm-run dev-server"
  },
  "version": "7.5.1"
}
