{
  "_args": [
    [
      {
        "raw": "xmlchars@^2.1.1",
        "scope": null,
        "escapedName": "xmlchars",
        "name": "xmlchars",
        "rawSpec": "^2.1.1",
        "spec": ">=2.1.1 <3.0.0",
        "type": "range"
      },
      "/Applications/XAMPP/xamppfiles/htdocs/revents/node_modules/saxes"
    ]
  ],
  "_from": "xmlchars@^2.1.1",
  "_hasShrinkwrap": false,
  "_id": "xmlchars@2.1.1",
  "_location": "/xmlchars",
  "_nodeVersion": "12.4.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/xmlchars_2.1.1_1561418404206_0.30157004395919773"
  },
  "_npmUser": {
    "name": "lddubeau",
    "email": "ldd@lddubeau.com"
  },
  "_npmVersion": "6.9.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xmlchars@^2.1.1",
    "scope": null,
    "escapedName": "xmlchars",
    "name": "xmlchars",
    "rawSpec": "^2.1.1",
    "spec": ">=2.1.1 <3.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/saxes"
  ],
  "_resolved": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.1.1.tgz",
  "_shasum": "ef1a81c05bff629c2280007f12daca21bd6f6c93",
  "_shrinkwrap": null,
  "_spec": "xmlchars@^2.1.1",
  "_where": "/Applications/XAMPP/xamppfiles/htdocs/revents/node_modules/saxes",
  "author": {
    "name": "Louis-Dominique Dubeau",
    "email": "ldd@lddubeau.com"
  },
  "bugs": {
    "url": "https://github.com/lddubeau/xmlchars/issues"
  },
  "dependencies": {},
  "description": "Utilities for determining if characters belong to character classes defined by the XML specs.",
  "devDependencies": {
    "@commitlint/cli": "^8.0.0",
    "@commitlint/config-angular": "^8.0.0",
    "@types/chai": "^4.1.7",
    "@types/mocha": "^5.2.7",
    "chai": "^4.2.0",
    "conventional-changelog-cli": "^2.0.22",
    "husky": "^2.5.0",
    "mocha": "^6.1.4",
    "ts-node": "^8.3.0",
    "tslint": "^5.18.0",
    "tslint-config-lddubeau": "^4.1.0",
    "typescript": "^3.5.2"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-7hew1RPJ1iIuje/Y01bGD/mXokXxegAgVS+e+E0wSi2ILHQkYAH1+JXARwTjZSM4Z4Z+c73aKspEcqj+zPPL/w==",
    "shasum": "ef1a81c05bff629c2280007f12daca21bd6f6c93",
    "tarball": "https://registry.npmjs.org/xmlchars/-/xmlchars-2.1.1.tgz",
    "fileCount": 18,
    "unpackedSize": 57305,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJdEVqlCRA9TVsSAnZWagAA6x8P/RVTBr1P398CnCJvlkMH\nlxD51AWESbzdjQdBNks+epkqdveqwPM1W90CG5FjcoBk8fV0+/x+uNV39Ncl\nBUo4zuT5D5MFKrEvZfbBFE7OWwtXIsLCWCjnNtxlXWdk8QAUnW4/DctXUiOv\negjw6JRjoJI+/6ScPwvLqJABALI1LTeA+k15G+fa5tD7d32UWpUaJQmZtCxf\nTCEAenepu3nT0bDhEXpkslBva44T9c9dhi00i822QJYQJL0aPYeWSbSOgCbI\n0z1c2NCVAEc+qx4SFlD2WayH4SyU6Q2RNooc7HECcpAwXgLjzZCMeEAzhVkL\n3ybiUf/KTPBzvJKrU6GS+fYhMC94w2yEFQbm/E45GYkrRfnQrBf5Tn88XePV\nwS23CizvJhfJGGCejiA/npmSKEpkVkIDOwc556GV1P/x7rTj7mydyRYGw5UZ\nphhEheVF5rxsdYQiixgaLPWTR0Tf6uasTduU/nxlXxvb8Sd7bOKPniz7u0x7\nX2eGxhbI7vLCNGGDe0Emtfw+opX921mST4oAUFb2NEYFaMUcvu0sRrgHPmN9\nsq+6G4lS8MYeNk6Se9CkkuLOqkSB7d2kADs5AqKqMffhoGIQazEga12R6Hzr\nHQTd4AG24OgBggiVkTi7BjnOKEDPxrYINSFjiAD7gY1goD+06W3WTPFjsYZy\ncyRW\r\n=jcrA\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "homepage": "https://github.com/lddubeau/xmlchars#readme",
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -e $HUSKY_GIT_PARAMS"
    }
  },
  "keywords": [
    "XML",
    "validation"
  ],
  "license": "MIT",
  "main": "xmlchars.js",
  "maintainers": [
    {
      "name": "lddubeau",
      "email": "ldd@lddubeau.com"
    }
  ],
  "name": "xmlchars",
  "optionalDependencies": {},
  "readme": "Utilities for determining whether characters belong to character classes defined\nby the XML specs.\n\n## Organization\n\nIt used to be that the library was contained in a single file and you could just\nimport/require/what-have-you the `xmlchars` module. However, that setup did not\nwork well for people who cared about code optimization. Importing `xmlchars`\nmeant importing *all* of the library and because of the way the code was\ngenerated there was no way to shake the resulting code tree.\n\nDifferent modules cover different standards. At the time this documentation was\nlast updated, we had:\n\n* `xmlchars/xml/1.0/ed5` which covers XML 1.0 edition 5.\n* `xmlchars/xml/1.0/ed4` which covers XML 1.0 edition 4.\n* `xmlchars/xml/1.1/ed2` which covers XML 1.0 edition 2.\n* `xmlchars/xmlns/1.0/ed3` which covers XML Namespaces 1.0 edition 3.\n\n## Features\n\nThe \"things\" each module contains can be categorized as follows:\n\n1. \"Fragments\": these are parts and pieces of regular expressions that\ncorrespond to the productions defined in the standard that the module\ncovers. You'd use these to *build regular expressions*.\n\n2. Regular expressions that correspond to the productions defined in the\nstandard that the module covers.\n\n3. Lists: these are arrays of characters that correspond to the productions.\n\n4. Functions that test code points to verify whether they fit a production.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/lddubeau/xmlchars.git"
  },
  "scripts": {
    "build": "tsc && npm run copy",
    "clean": "rm -rf build",
    "copy": "cp README.md LICENSE build/dist && sed -e'/\"private\": true/d' package.json > build/dist/package.json",
    "postpublish": "git push origin --follow-tags",
    "posttest": "tslint -p tsconfig.json && tslint -p test/tsconfig.json",
    "postversion": "npm run xmlchars:publish",
    "prepack": "node -e 'require(\"assert\")(!require(\"./package.json\").private)'",
    "prepublishOnly": "node -e 'require(\"assert\")(!require(\"./package.json\").private)'",
    "pretest": "npm run build",
    "preversion": "npm run test-install",
    "test": "mocha",
    "test-install": "npm run test && (test_dir=build/install_dir; rm -rf $test_dir; mkdir -p $test_dir/node_modules; packname=`npm run xmlchars:pack --silent`; (cd $test_dir; npm install ../$packname); rm -rf $test_dir)",
    "version": "conventional-changelog -p angular -i CHANGELOG.md -s && git add CHANGELOG.md",
    "xmlchars:pack": "cd build/dist/ && (packname=`npm pack --silent`; mv $packname ..; echo $packname)",
    "xmlchars:publish": "npm run test-install && (cd build/dist && npm publish)"
  },
  "types": "xmlchars.d.ts",
  "version": "2.1.1"
}
